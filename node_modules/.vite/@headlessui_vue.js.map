{
  "version": 3,
  "sources": ["../@headlessui/vue/dist/_virtual/_rollupPluginBabelHelpers.js", "../@headlessui/vue/src/utils/match.ts", "../@headlessui/vue/src/utils/render.ts", "../@headlessui/vue/src/internal/stack-context.ts", "../@headlessui/vue/src/internal/portal-force-root.ts", "../@headlessui/vue/src/components/portal/portal.ts", "../@headlessui/vue/src/keyboard.ts", "../@headlessui/vue/src/hooks/use-id.ts", "../@headlessui/vue/src/hooks/use-window-event.ts", "../@headlessui/vue/src/internal/dom-containers.ts", "../@headlessui/vue/src/utils/focus-management.ts", "../@headlessui/vue/src/hooks/use-focus-trap.ts", "../@headlessui/vue/src/hooks/use-inert-others.ts", "../@headlessui/vue/src/components/description/description.ts", "../@headlessui/vue/src/utils/dom.ts", "../@headlessui/vue/src/internal/open-closed.ts", "../@headlessui/vue/src/components/dialog/dialog.ts", "../@headlessui/vue/src/hooks/use-resolve-button-type.ts", "../@headlessui/vue/src/components/disclosure/disclosure.ts", "../@headlessui/vue/src/components/focus-trap/focus-trap.ts", "../@headlessui/vue/src/utils/calculate-active-index.ts", "../@headlessui/vue/src/components/listbox/listbox.ts", "../@headlessui/vue/src/hooks/use-tree-walker.ts", "../@headlessui/vue/src/components/menu/menu.ts", "../@headlessui/vue/src/components/popover/popover.ts", "../@headlessui/vue/src/components/label/label.ts", "../@headlessui/vue/src/components/radio-group/radio-group.ts", "../@headlessui/vue/src/components/switch/switch.ts", "../@headlessui/vue/src/components/tabs/tabs.ts", "../@headlessui/vue/src/utils/once.ts", "../@headlessui/vue/src/utils/disposables.ts", "../@headlessui/vue/src/components/transitions/utils/transition.ts", "../@headlessui/vue/src/components/transitions/transition.ts"],
  "sourcesContent": ["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _createForOfIteratorHelperLoose as createForOfIteratorHelperLoose, _extends as extends, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _unsupportedIterableToArray as unsupportedIterableToArray };\n//# sourceMappingURL=_rollupPluginBabelHelpers.js.map\n", "export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n", "import { h, cloneVNode, Slots } from 'vue'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\nexport function render({\n  visible = true,\n  features = Features.None,\n  ...main\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n} & {\n  features?: Features\n  visible?: boolean\n}) {\n  // Visible always render\n  if (visible) return _render(main)\n\n  if (features & Features.Static) {\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (main.props.static) return _render(main)\n  }\n\n  if (features & Features.RenderStrategy) {\n    let strategy = main.props.unmount ?? true ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render({\n          ...main,\n          props: { ...main.props, hidden: true, style: { display: 'none' } },\n        })\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(main)\n}\n\nfunction _render({\n  props,\n  attrs,\n  slots,\n  slot,\n  name,\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n}) {\n  let { as, ...passThroughProps } = omit(props, ['unmount', 'static'])\n\n  let children = slots.default?.(slot)\n\n  if (as === 'template') {\n    if (Object.keys(passThroughProps).length > 0 || Object.keys(attrs).length > 0) {\n      let [firstChild, ...other] = children ?? []\n\n      if (!isValidElement(firstChild) || other.length > 0) {\n        throw new Error(\n          [\n            'Passing props on \"template\"!',\n            '',\n            `The current component <${name} /> is rendering a \"template\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .concat(Object.keys(attrs))\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneVNode(firstChild, passThroughProps as Record<string, any>)\n    }\n\n    if (Array.isArray(children) && children.length === 1) {\n      return children[0]\n    }\n\n    return children\n  }\n\n  return h(as, passThroughProps, children)\n}\n\nexport function omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n\nfunction isValidElement(input: any): boolean {\n  if (input == null) return false // No children\n  if (typeof input.type === 'string') return true // 'div', 'span', ...\n  if (typeof input.type === 'object') return true // Other components\n  if (typeof input.type === 'function') return true // Built-ins like Transition\n  return false // Comments, strings, ...\n}\n", "import {\n  inject,\n  provide,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\ntype OnUpdate = (message: StackMessage, element: HTMLElement) => void\n\nlet StackContext = Symbol('StackContext') as InjectionKey<OnUpdate>\n\nexport enum StackMessage {\n  AddElement,\n  RemoveElement,\n}\n\nexport function useStackContext() {\n  return inject(StackContext, () => {})\n}\n\nexport function useElemenStack(element: Ref<HTMLElement | null> | null) {\n  let notify = useStackContext()\n\n  watchEffect(onInvalidate => {\n    let domElement = element?.value\n    if (!domElement) return\n\n    notify(StackMessage.AddElement, domElement)\n    onInvalidate(() => notify(StackMessage.RemoveElement, domElement!))\n  })\n}\n\nexport function useStackProvider(onUpdate?: OnUpdate) {\n  let parentUpdate = useStackContext()\n\n  function notify(...args: Parameters<OnUpdate>) {\n    // Notify our layer\n    onUpdate?.(...args)\n\n    // Notify the parent\n    parentUpdate(...args)\n  }\n\n  provide(StackContext, notify)\n}\n", "import {\n  defineComponent,\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n} from 'vue'\nimport { render } from '../utils/render'\n\nlet ForcePortalRootContext = Symbol('ForcePortalRootContext') as InjectionKey<Boolean>\n\nexport function usePortalRoot() {\n  return inject(ForcePortalRootContext, false)\n}\n\nexport let ForcePortalRoot = defineComponent({\n  name: 'ForcePortalRoot',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    force: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    provide(ForcePortalRootContext, props.force)\n\n    return () => {\n      let { force, ...passThroughProps } = props\n      return render({ props: passThroughProps, slot: {}, slots, attrs, name: 'ForcePortalRoot' })\n    }\n  },\n})\n", "import {\n  Teleport,\n  defineComponent,\n  h,\n  inject,\n  onUnmounted,\n  provide,\n  reactive,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useElemenStack, useStackProvider } from '../../internal/stack-context'\nimport { usePortalRoot } from '../../internal/portal-force-root'\n\n// ---\n\nfunction getPortalRoot() {\n  let existingRoot = document.getElementById('headlessui-portal-root')\n  if (existingRoot) return existingRoot\n\n  let root = document.createElement('div')\n  root.setAttribute('id', 'headlessui-portal-root')\n  return document.body.appendChild(root)\n}\n\nexport let Portal = defineComponent({\n  name: 'Portal',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let forcePortalRoot = usePortalRoot()\n    let groupContext = inject(PortalGroupContext, null)\n    let myTarget = ref(\n      forcePortalRoot === true\n        ? getPortalRoot()\n        : groupContext === null\n        ? getPortalRoot()\n        : groupContext.resolveTarget()\n    )\n\n    watchEffect(() => {\n      if (forcePortalRoot) return\n      if (groupContext === null) return\n      myTarget.value = groupContext.resolveTarget()\n    })\n\n    let element = ref(null)\n    useElemenStack(element)\n\n    onUnmounted(() => {\n      let root = document.getElementById('headlessui-portal-root')\n      if (!root) return\n      if (myTarget.value !== root) return\n\n      if (myTarget.value.children.length <= 0) {\n        myTarget.value.parentElement?.removeChild(myTarget.value)\n      }\n    })\n\n    useStackProvider()\n\n    return () => {\n      if (myTarget.value === null) return null\n\n      let propsWeControl = {\n        ref: element,\n      }\n\n      return h(\n        // @ts-expect-error Children can be an object, but TypeScript is not happy\n        // with it. Once this is fixed upstream we can remove this assertion.\n        Teleport,\n        { to: myTarget.value },\n        render({\n          props: { ...props, ...propsWeControl },\n          slot: {},\n          attrs,\n          slots,\n          name: 'Portal',\n        })\n      )\n    }\n  },\n})\n\n// ---\n\nlet PortalGroupContext = Symbol('PortalGroupContext') as InjectionKey<{\n  resolveTarget(): HTMLElement | null\n}>\n\nexport let PortalGroup = defineComponent({\n  name: 'PortalGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    target: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots }) {\n    let api = reactive({\n      resolveTarget() {\n        return props.target\n      },\n    })\n\n    provide(PortalGroupContext, api)\n\n    return () => {\n      let { target: _, ...passThroughProps } = props\n\n      return render({ props: passThroughProps, slot: {}, attrs, slots, name: 'PortalGroup' })\n    }\n  },\n})\n", "// TODO: This must already exist somewhere, right? \uD83E\uDD14\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n", "let id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  return generateId()\n}\n", "import { watchEffect } from 'vue'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (typeof window === 'undefined') return\n\n  watchEffect(onInvalidate => {\n    window.addEventListener(type, listener, options)\n\n    onInvalidate(() => {\n      window.removeEventListener(type, listener, options)\n    })\n  })\n}\n", "export function contains(containers: Set<HTMLElement>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.contains(element)) return true\n  }\n\n  return false\n}\n", "import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n", "import {\n  onUnmounted,\n  onUpdated,\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\nimport { Keys } from '../keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from '../hooks/use-window-event'\nimport { contains } from '../internal/dom-containers'\n\nexport function useFocusTrap(\n  containers: Ref<Set<HTMLElement>>,\n  enabled: Ref<boolean> = ref(true),\n  options: Ref<{ initialFocus?: HTMLElement | null }> = ref({})\n) {\n  let restoreElement = ref<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = ref<HTMLElement | null>(null)\n\n  function handleFocus() {\n    if (!enabled.value) return\n    if (containers.value.size !== 1) return\n    let { initialFocus } = options.value\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus) {\n      if (initialFocus === activeElement) {\n        return // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.value, activeElement)) {\n      return // Already focused within Dialog\n    }\n\n    restoreElement.value = activeElement\n\n    // Try to focus the initialFocus ref\n    if (initialFocus) {\n      focusElement(initialFocus)\n    } else {\n      let couldFocus = false\n      for (let container of containers.value) {\n        let result = focusIn(container, Focus.First)\n        if (result === FocusResult.Success) {\n          couldFocus = true\n          break\n        }\n      }\n\n      if (!couldFocus) console.warn('There are no focusable elements inside the <FocusTrap />')\n    }\n\n    previousActiveElement.value = document.activeElement as HTMLElement\n  }\n\n  // Restore when `enabled` becomes false\n  function restore() {\n    focusElement(restoreElement.value)\n    restoreElement.value = null\n    previousActiveElement.value = null\n  }\n\n  // Handle initial focus\n  watchEffect(handleFocus)\n\n  onUpdated(() => {\n    enabled.value ? handleFocus() : restore()\n  })\n  onUnmounted(restore)\n\n  // Handle Tab & Shift+Tab keyboard events\n  useWindowEvent('keydown', event => {\n    if (!enabled.value) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (containers.value.size !== 1) return\n\n    event.preventDefault()\n\n    for (let element of containers.value) {\n      let result = focusIn(\n        element,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      )\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.value = document.activeElement as HTMLElement\n        break\n      }\n    }\n  })\n\n  // Prevent programmatically escaping\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!enabled.value) return\n      if (containers.value.size !== 1) return\n\n      let previous = previousActiveElement.value\n      if (!previous) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(containers.value, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.value = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.value)\n      }\n    },\n    true\n  )\n}\n", "import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect(onInvalidate => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet DescriptionContext = Symbol('DescriptionContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Ref<Record<string, any>>\n  name: string\n  props: Record<string, any>\n}>\n\nfunction useDescriptionContext() {\n  let context = inject(DescriptionContext, null)\n  if (context === null) {\n    throw new Error('Missing parent')\n  }\n  return context\n}\n\nexport function useDescriptions({\n  slot = ref({}),\n  name = 'Description',\n  props = {},\n}: {\n  slot?: Ref<Record<string, unknown>>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let descriptionIds = ref<string[]>([])\n\n  function register(value: string) {\n    descriptionIds.value.push(value)\n\n    return () => {\n      let idx = descriptionIds.value.indexOf(value)\n      if (idx === -1) return\n      descriptionIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(DescriptionContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() =>\n    descriptionIds.value.length > 0 ? descriptionIds.value.join(' ') : undefined\n  )\n}\n\n// ---\n\nexport let Description = defineComponent({\n  name: 'Description',\n  props: {\n    as: { type: [Object, String], default: 'p' },\n  },\n  render() {\n    let { name = 'Description', slot = ref({}), props = {} } = this.context\n    let passThroughProps = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: slot.value,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useDescriptionContext()\n    let id = `headlessui-description-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n", "import { Ref } from 'vue'\n\nexport function dom<T extends HTMLElement>(ref?: Ref<T | null>): T | null {\n  if (ref == null) return null\n  if (ref.value == null) return null\n  return ((ref as Ref<T & { $el: unknown }>).value.$el ?? ref.value) as T | null\n}\n", "import {\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nlet Context = Symbol('Context') as InjectionKey<Ref<State>>\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function hasOpenClosed() {\n  return useOpenClosed() !== null\n}\n\nexport function useOpenClosed() {\n  return inject(Context, null)\n}\n\nexport function useOpenClosedProvider(value: Ref<State>) {\n  provide(Context, value)\n}\n", "// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  Ref,\n} from 'vue'\n\nimport { render, Features } from '../../utils/render'\nimport { Keys } from '../../keyboard'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { contains } from '../../internal/dom-containers'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { Portal, PortalGroup } from '../portal/portal'\nimport { StackMessage, useStackProvider } from '../../internal/stack-context'\nimport { match } from '../../utils/match'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State } from '../../internal/open-closed'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  dialogState: Ref<DialogStates>\n\n  titleId: Ref<string | null>\n\n  setTitleId(id: string | null): void\n\n  close(): void\n}\n\nlet DialogContext = Symbol('DialogContext') as InjectionKey<StateDefinition>\n\nfunction useDialogContext(component: string) {\n  let context = inject(DialogContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet Missing = 'DC8F892D-2EBD-447C-A4C8-A03058436FF4'\n\nexport let Dialog = defineComponent({\n  name: 'Dialog',\n  inheritAttrs: false, // Manually handling this\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    open: { type: [Boolean, String], default: Missing },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  emits: { close: (_close: boolean) => true },\n  render() {\n    let propsWeControl = {\n      // Manually passthrough the attributes, because Vue can't automatically pass\n      // it to the underlying div because of all the wrapper components below.\n      ...this.$attrs,\n      ref: 'el',\n      id: this.id,\n      role: 'dialog',\n      'aria-modal': this.dialogState === DialogStates.Open ? true : undefined,\n      'aria-labelledby': this.titleId,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n    }\n    let { open: _, initialFocus, ...passThroughProps } = this.$props\n\n    let slot = { open: this.dialogState === DialogStates.Open }\n\n    return h(ForcePortalRoot, { force: true }, () =>\n      h(Portal, () =>\n        h(PortalGroup, { target: this.dialogRef }, () =>\n          h(ForcePortalRoot, { force: false }, () =>\n            render({\n              props: { ...passThroughProps, ...propsWeControl },\n              slot,\n              attrs: this.$attrs,\n              slots: this.$slots,\n              visible: this.visible,\n              features: Features.RenderStrategy | Features.Static,\n              name: 'Dialog',\n            })\n          )\n        )\n      )\n    )\n  },\n  setup(props, { emit }) {\n    let containers = ref<Set<HTMLElement>>(new Set())\n\n    let usesOpenClosedState = useOpenClosed()\n    let open = computed(() => {\n      if (props.open === Missing && usesOpenClosedState !== null) {\n        // Update the `open` prop based on the open closed state\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n      return props.open\n    })\n\n    // Validations\n    let hasOpen = props.open !== Missing || usesOpenClosedState !== null\n\n    if (!hasOpen) {\n      throw new Error(`You forgot to provide an \\`open\\` prop to the \\`Dialog\\`.`)\n    }\n\n    if (typeof open.value !== 'boolean') {\n      throw new Error(\n        `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${\n          open.value === Missing ? undefined : props.open\n        }`\n      )\n    }\n\n    let dialogState = computed(() => (props.open ? DialogStates.Open : DialogStates.Closed))\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return dialogState.value === DialogStates.Open\n    })\n    let internalDialogRef = ref<HTMLDivElement | null>(null)\n    let enabled = ref(dialogState.value === DialogStates.Open)\n\n    onUpdated(() => {\n      enabled.value = dialogState.value === DialogStates.Open\n    })\n\n    let id = `headlessui-dialog-${useId()}`\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    useFocusTrap(containers, enabled, focusTrapOptions)\n    useInertOthers(internalDialogRef, enabled)\n    useStackProvider((message, element) => {\n      return match(message, {\n        [StackMessage.AddElement]() {\n          containers.value.add(element)\n        },\n        [StackMessage.RemoveElement]() {\n          containers.value.delete(element)\n        },\n      })\n    })\n\n    let describedby = useDescriptions({\n      name: 'DialogDescription',\n      slot: computed(() => ({ open: open.value })),\n    })\n\n    let titleId = ref<StateDefinition['titleId']['value']>(null)\n\n    let api = {\n      titleId,\n      dialogState,\n      setTitleId(id: string | null) {\n        if (titleId.value === id) return\n        titleId.value = id\n      },\n      close() {\n        emit('close', false)\n      },\n    }\n\n    provide(DialogContext, api)\n\n    // Handle outside click\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size !== 1) return\n      if (contains(containers.value, target)) return\n\n      api.close()\n      nextTick(() => target?.focus())\n    })\n\n    // Handle `Escape` to close\n    useWindowEvent('keydown', event => {\n      if (event.key !== Keys.Escape) return\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size > 1) return // 1 is myself, otherwise other elements in the Stack\n      event.preventDefault()\n      event.stopPropagation()\n      api.close()\n    })\n\n    // Scroll lock\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n\n      let overflow = document.documentElement.style.overflow\n      let paddingRight = document.documentElement.style.paddingRight\n\n      let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n      document.documentElement.style.overflow = 'hidden'\n      document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n      onInvalidate(() => {\n        document.documentElement.style.overflow = overflow\n        document.documentElement.style.paddingRight = paddingRight\n      })\n    })\n\n    // Trigger close when the FocusTrap gets hidden\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n      let container = dom(internalDialogRef)\n      if (!container) return\n\n      let observer = new IntersectionObserver(entries => {\n        for (let entry of entries) {\n          if (\n            entry.boundingClientRect.x === 0 &&\n            entry.boundingClientRect.y === 0 &&\n            entry.boundingClientRect.width === 0 &&\n            entry.boundingClientRect.height === 0\n          ) {\n            api.close()\n          }\n        }\n      })\n\n      observer.observe(container)\n\n      onInvalidate(() => observer.disconnect())\n    })\n\n    return {\n      id,\n      el: internalDialogRef,\n      dialogRef: internalDialogRef,\n      containers,\n      dialogState,\n      titleId,\n      describedby,\n      visible,\n      open,\n      handleClick(event: MouseEvent) {\n        event.stopPropagation()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogOverlay = defineComponent({\n  name: 'DialogOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let api = useDialogContext('DialogOverlay')\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogOverlay',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogOverlay')\n    let id = `headlessui-dialog-overlay-${useId()}`\n\n    return {\n      id,\n      handleClick(event: MouseEvent) {\n        if (event.target !== event.currentTarget) return\n        event.preventDefault()\n        event.stopPropagation()\n        api.close()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogTitle = defineComponent({\n  name: 'DialogTitle',\n  props: {\n    as: { type: [Object, String], default: 'h2' },\n  },\n  render() {\n    let api = useDialogContext('DialogTitle')\n    let propsWeControl = { id: this.id }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogTitle',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogTitle')\n    let id = `headlessui-dialog-title-${useId()}`\n\n    onMounted(() => {\n      api.setTitleId(id)\n      onUnmounted(() => api.setTitleId(null))\n    })\n\n    return { id }\n  },\n})\n\n// ---\n\nexport let DialogDescription = Description\n", "import { ref, onMounted, watchEffect, Ref } from 'vue'\nimport { dom } from '../utils/dom'\n\nfunction resolveType(type: unknown, as: string | object) {\n  if (type) return type\n\n  let tag = as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType(\n  data: Ref<{ as: string | object; type?: unknown }>,\n  refElement: Ref<HTMLElement | null>\n) {\n  let type = ref(resolveType(data.value.type, data.value.as))\n\n  onMounted(() => {\n    type.value = resolveType(data.value.type, data.value.as)\n  })\n\n  watchEffect(() => {\n    if (type.value) return\n    if (!dom(refElement)) return\n\n    if (dom(refElement) instanceof HTMLButtonElement && !dom(refElement)?.hasAttribute('type')) {\n      type.value = 'button'\n    }\n  })\n\n  return type\n}\n", "// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  InjectionKey,\n  Ref,\n  computed,\n  watchEffect,\n} from 'vue'\n\nimport { Keys } from '../../keyboard'\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  disclosureState: Ref<DisclosureStates>\n  panel: Ref<HTMLElement | null>\n  panelId: string\n  button: Ref<HTMLButtonElement | null>\n  buttonId: string\n\n  // State mutators\n  toggleDisclosure(): void\n  closeDisclosure(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet DisclosureContext = Symbol('DisclosureContext') as InjectionKey<StateDefinition>\n\nfunction useDisclosureContext(component: string) {\n  let context = inject(DisclosureContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n\n  return context\n}\n\nlet DisclosurePanelContext = Symbol('DisclosurePanelContext') as InjectionKey<string | null>\nfunction useDisclosurePanelContext() {\n  return inject(DisclosurePanelContext, null)\n}\n\n// ---\n\nexport let Disclosure = defineComponent({\n  name: 'Disclosure',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultOpen: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-disclosure-button-${useId()}`\n    let panelId = `headlessui-disclosure-panel-${useId()}`\n\n    let disclosureState = ref<StateDefinition['disclosureState']['value']>(\n      props.defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed\n    )\n    let panelRef = ref<StateDefinition['panel']['value']>(null)\n    let buttonRef = ref<StateDefinition['button']['value']>(null)\n\n    let api = {\n      buttonId,\n      panelId,\n      disclosureState,\n      panel: panelRef,\n      button: buttonRef,\n      toggleDisclosure() {\n        disclosureState.value = match(disclosureState.value, {\n          [DisclosureStates.Open]: DisclosureStates.Closed,\n          [DisclosureStates.Closed]: DisclosureStates.Open,\n        })\n      },\n      closeDisclosure() {\n        if (disclosureState.value === DisclosureStates.Closed) return\n        disclosureState.value = DisclosureStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closeDisclosure()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(DisclosureContext, api)\n    useOpenClosedProvider(\n      computed(() => {\n        return match(disclosureState.value, {\n          [DisclosureStates.Open]: State.Open,\n          [DisclosureStates.Closed]: State.Closed,\n        })\n      })\n    )\n\n    return () => {\n      let { defaultOpen: _, ...passThroughProps } = props\n      let slot = { open: disclosureState.value === DisclosureStates.Open, close: api.close }\n      return render({ props: passThroughProps, slot, slots, attrs, name: 'Disclosure' })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosureButton = defineComponent({\n  name: 'DisclosureButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          ref: 'el',\n          type: this.type,\n          onClick: this.handleClick,\n          onKeydown: this.handleKeyDown,\n        }\n      : {\n          id: this.id,\n          ref: 'el',\n          type: this.type,\n          'aria-expanded': this.$props.disabled\n            ? undefined\n            : api.disclosureState.value === DisclosureStates.Open,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          disabled: this.$props.disabled ? true : undefined,\n          onClick: this.handleClick,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DisclosureButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let panelContext = useDisclosurePanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    let elementRef = ref(null)\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    return {\n      isWithinPanel,\n      id: api.buttonId,\n      el: elementRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        elementRef\n      ),\n      handleClick() {\n        if (props.disabled) return\n\n        if (isWithinPanel) {\n          api.toggleDisclosure()\n          dom(api.button)?.focus()\n        } else {\n          api.toggleDisclosure()\n        }\n      },\n      handleKeyDown(event: KeyboardEvent) {\n        if (props.disabled) return\n\n        if (isWithinPanel) {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault()\n              event.stopPropagation()\n              api.toggleDisclosure()\n              dom(api.button)?.focus()\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault()\n              event.stopPropagation()\n              api.toggleDisclosure()\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Space:\n            // Required for firefox, event.preventDefault() in handleKeyDown for\n            // the Space key doesn't cancel the handleKeyUp, which in turn\n            // triggers a *click*.\n            event.preventDefault()\n            break\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DisclosurePanel = defineComponent({\n  name: 'DisclosurePanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open, close: api.close }\n    let propsWeControl = { id: this.id, ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'DisclosurePanel',\n    })\n  },\n  setup() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    provide(DisclosurePanelContext, api.panelId)\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.disclosureState.value === DisclosureStates.Open\n    })\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      visible,\n    }\n  },\n})\n", "import {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n\n  // Types\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nexport let FocusTrap = defineComponent({\n  name: 'FocusTrap',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  render() {\n    let slot = {}\n    let propsWeControl = { ref: 'el' }\n    let { initialFocus, ...passThroughProps } = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'FocusTrap',\n    })\n  },\n  setup(props) {\n    let containers = ref(new Set<HTMLElement>())\n    let container = ref<HTMLElement | null>(null)\n    let enabled = ref(true)\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    onMounted(() => {\n      if (!container.value) return\n      containers.value.add(container.value)\n\n      useFocusTrap(containers, enabled, focusTrapOptions)\n    })\n\n    onUnmounted(() => {\n      enabled.value = false\n    })\n\n    return { el: container }\n  },\n})\n", "function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n", "import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  ComputedRef,\n  watchEffect,\n  toRaw,\n  watch,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype ListboxOptionDataRef = Ref<{ textValue: string; disabled: boolean; value: unknown }>\ntype StateDefinition = {\n  // State\n  listboxState: Ref<ListboxStates>\n  value: ComputedRef<unknown>\n  orientation: Ref<'vertical' | 'horizontal'>\n\n  labelRef: Ref<HTMLLabelElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ListboxOptionDataRef }[]>\n  searchQuery: Ref<string>\n  activeOptionIndex: Ref<number | null>\n\n  // State mutators\n  closeListbox(): void\n  openListbox(): void\n  goToOption(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerOption(id: string, dataRef: ListboxOptionDataRef): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ListboxContext = Symbol('ListboxContext') as InjectionKey<StateDefinition>\n\nfunction useListboxContext(component: string) {\n  let context = inject(ListboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Listbox = defineComponent({\n  name: 'Listbox',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    horizontal: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let listboxState = ref<StateDefinition['listboxState']['value']>(ListboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      listboxState,\n      value,\n      orientation: computed(() => (props.horizontal ? 'horizontal' : 'vertical')),\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      searchQuery,\n      activeOptionIndex,\n      closeListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        listboxState.value = ListboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Open) return\n        listboxState.value = ListboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => options.value,\n            resolveActiveIndex: () => activeOptionIndex.value,\n            resolveId: option => option.id,\n            resolveDisabled: option => option.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeOptionIndex.value === nextActiveOptionIndex) return\n        searchQuery.value = ''\n        activeOptionIndex.value = nextActiveOptionIndex\n      },\n      search(value: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        searchQuery.value += value.toLowerCase()\n\n        let match = options.value.findIndex(\n          option =>\n            !option.dataRef.disabled && option.dataRef.textValue.startsWith(searchQuery.value)\n        )\n\n        if (match === -1 || match === activeOptionIndex.value) return\n        activeOptionIndex.value = match\n      },\n      clearSearch() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        if (searchQuery.value === '') return\n\n        searchQuery.value = ''\n      },\n      registerOption(id: string, dataRef: ListboxOptionDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        options.value.push({ id, dataRef })\n      },\n      unregisterOption(id: string) {\n        let nextOptions = options.value.slice()\n        let currentActiveOption =\n          activeOptionIndex.value !== null ? nextOptions[activeOptionIndex.value] : null\n        let idx = nextOptions.findIndex(a => a.id === id)\n        if (idx !== -1) nextOptions.splice(idx, 1)\n        options.value = nextOptions\n        activeOptionIndex.value = (() => {\n          if (idx === activeOptionIndex.value) return null\n          if (currentActiveOption === null) return null\n\n          // If we removed the option before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextOptions.indexOf(currentActiveOption)\n        })()\n      },\n      select(value: unknown) {\n        if (props.disabled) return\n        emit('update:modelValue', value)\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (listboxState.value !== ListboxStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(optionsRef)?.contains(target)) api.closeListbox()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ListboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(listboxState.value, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: listboxState.value === ListboxStates.Open, disabled: props.disabled }\n      return render({\n        props: omit(props, ['modelValue', 'onUpdate:modelValue', 'disabled', 'horizontal']),\n        slot,\n        slots,\n        attrs,\n        name: 'Listbox',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxLabel = defineComponent({\n  name: 'ListboxLabel',\n  props: { as: { type: [Object, String], default: 'label' } },\n  render() {\n    let api = useListboxContext('ListboxLabel')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = { id: this.id, ref: 'el', onClick: this.handleClick }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxLabel',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxLabel')\n    let id = `headlessui-listbox-label-${useId()}`\n\n    return {\n      id,\n      el: api.labelRef,\n      handleClick() {\n        dom(api.buttonRef)?.focus({ preventScroll: true })\n      },\n    }\n  },\n})\n\n// ---\n\nexport let ListboxButton = defineComponent({\n  name: 'ListboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useListboxContext('ListboxButton')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: this.type,\n      'aria-haspopup': true,\n      'aria-controls': dom(api.optionsRef)?.id,\n      'aria-expanded': api.disabled.value\n        ? undefined\n        : api.listboxState.value === ListboxStates.Open,\n      'aria-labelledby': api.labelRef.value\n        ? [dom(api.labelRef)?.id, this.id].join(' ')\n        : undefined,\n      disabled: api.disabled.value === true ? true : undefined,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useListboxContext('ListboxButton')\n    let id = `headlessui-listbox-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.listboxState.value === ListboxStates.Open) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openListbox()\n        nextFrame(() => dom(api.optionsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return {\n      id,\n      el: api.buttonRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        api.buttonRef\n      ),\n      handleKeyDown,\n      handleKeyUp,\n      handleClick,\n    }\n  },\n})\n\n// ---\n\nexport let ListboxOptions = defineComponent({\n  name: 'ListboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useListboxContext('ListboxOptions')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeOptionIndex.value === null\n          ? undefined\n          : api.options.value[api.activeOptionIndex.value]?.id,\n      'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n      'aria-orientation': api.orientation.value,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      role: 'listbox',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'ListboxOptions',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxOptions')\n    let id = `headlessui-listbox-options-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeOptionIndex.value !== null) {\n            let { dataRef } = api.options.value[api.activeOptionIndex.value]\n            api.select(dataRef.value)\n          }\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case match(api.orientation.value, {\n          vertical: Keys.ArrowDown,\n          horizontal: Keys.ArrowRight,\n        }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Next)\n\n        case match(api.orientation.value, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.listboxState.value === ListboxStates.Open\n    })\n\n    return { id, el: api.optionsRef, handleKeyDown, visible }\n  },\n})\n\nexport let ListboxOption = defineComponent({\n  name: 'ListboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useListboxContext('ListboxOption')\n    let id = `headlessui-listbox-option-${useId()}`\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    let dataRef = ref<ListboxOptionDataRef['value']>({\n      disabled: props.disabled,\n      value: props.value,\n      textValue: '',\n    })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    onMounted(() => {\n      watch(\n        [api.listboxState, selected],\n        () => {\n          if (api.listboxState.value !== ListboxStates.Open) return\n          if (!selected.value) return\n          api.goToOption(Focus.Specific, id)\n          document.getElementById(id)?.focus?.()\n        },\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (api.listboxState.value !== ListboxStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.select(props.value)\n      api.closeListbox()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        'aria-selected': selected.value === true ? selected.value : undefined,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxOption',\n      })\n    }\n  },\n})\n", "import { watchEffect, ComputedRef } from 'vue'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n", "import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  watchEffect,\n} from 'vue'\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype MenuItemDataRef = Ref<{ textValue: string; disabled: boolean }>\ntype StateDefinition = {\n  // State\n  menuState: Ref<MenuStates>\n  buttonRef: Ref<HTMLButtonElement | null>\n  itemsRef: Ref<HTMLDivElement | null>\n  items: Ref<{ id: string; dataRef: MenuItemDataRef }[]>\n  searchQuery: Ref<string>\n  activeItemIndex: Ref<number | null>\n\n  // State mutators\n  closeMenu(): void\n  openMenu(): void\n  goToItem(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerItem(id: string, dataRef: MenuItemDataRef): void\n  unregisterItem(id: string): void\n}\n\nlet MenuContext = Symbol('MenuContext') as InjectionKey<StateDefinition>\n\nfunction useMenuContext(component: string) {\n  let context = inject(MenuContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Menu /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n\n  return context\n}\n\nexport let Menu = defineComponent({\n  name: 'Menu',\n  props: { as: { type: [Object, String], default: 'template' } },\n  setup(props, { slots, attrs }) {\n    let menuState = ref<StateDefinition['menuState']['value']>(MenuStates.Closed)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let itemsRef = ref<StateDefinition['itemsRef']['value']>(null)\n    let items = ref<StateDefinition['items']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeItemIndex = ref<StateDefinition['activeItemIndex']['value']>(null)\n\n    let api = {\n      menuState,\n      buttonRef,\n      itemsRef,\n      items,\n      searchQuery,\n      activeItemIndex,\n      closeMenu: () => {\n        menuState.value = MenuStates.Closed\n        activeItemIndex.value = null\n      },\n      openMenu: () => (menuState.value = MenuStates.Open),\n      goToItem(focus: Focus, id?: string) {\n        let nextActiveItemIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => items.value,\n            resolveActiveIndex: () => activeItemIndex.value,\n            resolveId: item => item.id,\n            resolveDisabled: item => item.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeItemIndex.value === nextActiveItemIndex) return\n        searchQuery.value = ''\n        activeItemIndex.value = nextActiveItemIndex\n      },\n      search(value: string) {\n        searchQuery.value += value.toLowerCase()\n\n        let match = items.value.findIndex(\n          item => item.dataRef.textValue.startsWith(searchQuery.value) && !item.dataRef.disabled\n        )\n\n        if (match === -1 || match === activeItemIndex.value) return\n\n        activeItemIndex.value = match\n      },\n      clearSearch() {\n        searchQuery.value = ''\n      },\n      registerItem(id: string, dataRef: MenuItemDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        items.value.push({ id, dataRef })\n      },\n      unregisterItem(id: string) {\n        let nextItems = items.value.slice()\n        let currentActiveItem =\n          activeItemIndex.value !== null ? nextItems[activeItemIndex.value] : null\n        let idx = nextItems.findIndex(a => a.id === id)\n        if (idx !== -1) nextItems.splice(idx, 1)\n        items.value = nextItems\n        activeItemIndex.value = (() => {\n          if (idx === activeItemIndex.value) return null\n          if (currentActiveItem === null) return null\n\n          // If we removed the item before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextItems.indexOf(currentActiveItem)\n        })()\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (menuState.value !== MenuStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(itemsRef)?.contains(target)) api.closeMenu()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(MenuContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(menuState.value, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: menuState.value === MenuStates.Open }\n      return render({ props, slot, slots, attrs, name: 'Menu' })\n    }\n  },\n})\n\nexport let MenuButton = defineComponent({\n  name: 'MenuButton',\n  props: {\n    disabled: { type: Boolean, default: false },\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useMenuContext('MenuButton')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: this.type,\n      'aria-haspopup': true,\n      'aria-controls': dom(api.itemsRef)?.id,\n      'aria-expanded': this.$props.disabled ? undefined : api.menuState.value === MenuStates.Open,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'MenuButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useMenuContext('MenuButton')\n    let id = `headlessui-menu-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (api.menuState.value === MenuStates.Open) {\n        api.closeMenu()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        api.openMenu()\n        nextFrame(() => dom(api.itemsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return {\n      id,\n      el: api.buttonRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        api.buttonRef\n      ),\n      handleKeyDown,\n      handleKeyUp,\n      handleClick,\n    }\n  },\n})\n\nexport let MenuItems = defineComponent({\n  name: 'MenuItems',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useMenuContext('MenuItems')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeItemIndex.value === null\n          ? undefined\n          : api.items.value[api.activeItemIndex.value]?.id,\n      'aria-labelledby': dom(api.buttonRef)?.id,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      role: 'menu',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'MenuItems',\n    })\n  },\n  setup() {\n    let api = useMenuContext('MenuItems')\n    let id = `headlessui-menu-items-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    useTreeWalker({\n      container: computed(() => dom(api.itemsRef)),\n      enabled: computed(() => api.menuState.value === MenuStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeItemIndex.value !== null) {\n            let { id } = api.items.value[api.activeItemIndex.value]\n            document.getElementById(id)?.click()\n          }\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.menuState.value === MenuStates.Open\n    })\n\n    return { id, el: api.itemsRef, handleKeyDown, handleKeyUp, visible }\n  },\n})\n\nexport let MenuItem = defineComponent({\n  name: 'MenuItem',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useMenuContext('MenuItem')\n    let id = `headlessui-menu-item-${useId()}`\n\n    let active = computed(() => {\n      return api.activeItemIndex.value !== null\n        ? api.items.value[api.activeItemIndex.value].id === id\n        : false\n    })\n\n    let dataRef = ref<MenuItemDataRef['value']>({ disabled: props.disabled, textValue: '' })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerItem(id, dataRef))\n    onUnmounted(() => api.unregisterItem(id))\n\n    watchEffect(() => {\n      if (api.menuState.value !== MenuStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.closeMenu()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToItem(Focus.Nothing)\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToItem(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'menuitem',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuItem',\n      })\n    }\n  },\n})\n", "import {\n  defineComponent,\n  inject,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  popoverState: Ref<PopoverStates>\n  button: Ref<HTMLElement | null>\n  buttonId: string\n  panel: Ref<HTMLElement | null>\n  panelId: string\n\n  // State mutators\n  togglePopover(): void\n  closePopover(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet PopoverContext = Symbol('PopoverContext') as InjectionKey<StateDefinition>\nfunction usePopoverContext(component: string) {\n  let context = inject(PopoverContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = Symbol('PopoverGroupContext') as InjectionKey<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>\n\nfunction usePopoverGroupContext() {\n  return inject(PopoverGroupContext, null)\n}\n\nlet PopoverPanelContext = Symbol('PopoverPanelContext') as InjectionKey<string | null>\nfunction usePopoverPanelContext() {\n  return inject(PopoverPanelContext, null)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\n\n// ---\n\nexport let Popover = defineComponent({\n  name: 'Popover',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-popover-button-${useId()}`\n    let panelId = `headlessui-popover-panel-${useId()}`\n\n    let popoverState = ref<StateDefinition['popoverState']['value']>(PopoverStates.Closed)\n    let button = ref<StateDefinition['button']['value']>(null)\n    let panel = ref<StateDefinition['panel']['value']>(null)\n\n    let api = {\n      popoverState,\n      buttonId,\n      panelId,\n      panel,\n      button,\n      togglePopover() {\n        popoverState.value = match(popoverState.value, {\n          [PopoverStates.Open]: PopoverStates.Closed,\n          [PopoverStates.Closed]: PopoverStates.Open,\n        })\n      },\n      closePopover() {\n        if (popoverState.value === PopoverStates.Closed) return\n        popoverState.value = PopoverStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closePopover()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(PopoverContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(popoverState.value, {\n          [PopoverStates.Open]: State.Open,\n          [PopoverStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let registerBag = {\n      buttonId,\n      panelId,\n      close() {\n        api.closePopover()\n      },\n    }\n\n    let groupContext = usePopoverGroupContext()\n    let registerPopover = groupContext?.registerPopover\n\n    function isFocusWithinPopoverGroup() {\n      return (\n        groupContext?.isFocusWithinPopoverGroup() ??\n        (dom(button)?.contains(document.activeElement) ||\n          dom(panel)?.contains(document.activeElement))\n      )\n    }\n\n    watchEffect(() => registerPopover?.(registerBag))\n\n    // Handle focus out\n    useWindowEvent(\n      'focus',\n      () => {\n        if (popoverState.value !== PopoverStates.Open) return\n        if (isFocusWithinPopoverGroup()) return\n        if (!button) return\n        if (!panel) return\n\n        api.closePopover()\n      },\n      true\n    )\n\n    // Handle outside click\n    useWindowEvent('mousedown', (event: MouseEvent) => {\n      let target = event.target as HTMLElement\n\n      if (popoverState.value !== PopoverStates.Open) return\n\n      if (dom(button)?.contains(target)) return\n      if (dom(panel)?.contains(target)) return\n\n      api.closePopover()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(button)?.focus()\n      }\n    })\n\n    return () => {\n      let slot = { open: popoverState.value === PopoverStates.Open, close: api.close }\n      return render({ props, slot, slots, attrs, name: 'Popover' })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverButton = defineComponent({\n  name: 'PopoverButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverButton')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          ref: 'el',\n          type: this.type,\n          onKeydown: this.handleKeyDown,\n          onClick: this.handleClick,\n        }\n      : {\n          ref: 'el',\n          id: api.buttonId,\n          type: this.type,\n          'aria-expanded': this.$props.disabled\n            ? undefined\n            : api.popoverState.value === PopoverStates.Open,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          disabled: this.$props.disabled ? true : undefined,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n          onClick: this.handleClick,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = usePopoverContext('PopoverButton')\n\n    let groupContext = usePopoverGroupContext()\n    let closeOthers = groupContext?.closeOthers\n\n    let panelContext = usePopoverPanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n    let activeElementRef = ref<Element | null>(null)\n    let previousActiveElementRef = ref<Element | null>(\n      typeof window === 'undefined' ? null : document.activeElement\n    )\n\n    useWindowEvent(\n      'focus',\n      () => {\n        previousActiveElementRef.value = activeElementRef.value\n        activeElementRef.value = document.activeElement\n      },\n      true\n    )\n\n    let elementRef = ref(null)\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    return {\n      isWithinPanel,\n      el: elementRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        elementRef\n      ),\n      handleKeyDown(event: KeyboardEvent) {\n        if (isWithinPanel) {\n          if (api.popoverState.value === PopoverStates.Closed) return\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              api.closePopover()\n              dom(api.button)?.focus() // Re-focus the original opening Button\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n              api.togglePopover()\n              break\n\n            case Keys.Escape:\n              if (api.popoverState.value !== PopoverStates.Open) return closeOthers?.(api.buttonId)\n              if (!dom(api.button)) return\n              if (!dom(api.button)?.contains(document.activeElement)) return\n              event.preventDefault()\n              event.stopPropagation()\n              api.closePopover()\n              break\n\n            case Keys.Tab:\n              if (api.popoverState.value !== PopoverStates.Open) return\n              if (!api.panel) return\n              if (!api.button) return\n\n              // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n              if (event.shiftKey) {\n                // Check if the last focused element exists, and check that it is not inside button or panel itself\n                if (!previousActiveElementRef.value) return\n                if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n                if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n                // Check if the last focused element is *after* the button in the DOM\n                let focusableElements = getFocusableElements()\n                let previousIdx = focusableElements.indexOf(\n                  previousActiveElementRef.value as HTMLElement\n                )\n                let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n                if (buttonIdx > previousIdx) return\n\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.Last)\n              } else {\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.First)\n              }\n\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (isWithinPanel) return\n        if (event.key === Keys.Space) {\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n        }\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!api.panel) return\n        if (!api.button) return\n\n        // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n        switch (event.key) {\n          case Keys.Tab:\n            // Check if the last focused element exists, and check that it is not inside button or panel itself\n            if (!previousActiveElementRef.value) return\n            if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n            if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n            // Check if the last focused element is *after* the button in the DOM\n            let focusableElements = getFocusableElements()\n            let previousIdx = focusableElements.indexOf(\n              previousActiveElementRef.value as HTMLElement\n            )\n            let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n            if (buttonIdx > previousIdx) return\n\n            event.preventDefault()\n            event.stopPropagation()\n            focusIn(dom(api.panel)!, Focus.Last)\n            break\n        }\n      },\n      handleClick() {\n        if (props.disabled) return\n        if (isWithinPanel) {\n          api.closePopover()\n          dom(api.button)?.focus() // Re-focus the original opening Button\n        } else {\n          if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n          dom(api.button)?.focus()\n          api.togglePopover()\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let PopoverOverlay = defineComponent({\n  name: 'PopoverOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverOverlay',\n    })\n  },\n  setup() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: `headlessui-popover-overlay-${useId()}`,\n      handleClick() {\n        api.closePopover()\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverPanel = defineComponent({\n  name: 'PopoverPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    focus: { type: Boolean, default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverPanel')\n\n    let slot = {\n      open: api.popoverState.value === PopoverStates.Open,\n      close: api.close,\n    }\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverPanel',\n    })\n  },\n  setup(props) {\n    let { focus } = props\n    let api = usePopoverContext('PopoverPanel')\n\n    provide(PopoverPanelContext, api.panelId)\n\n    onUnmounted(() => {\n      api.panel.value = null\n    })\n\n    // Move focus within panel\n    watchEffect(() => {\n      if (!focus) return\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n\n      let activeElement = document.activeElement as HTMLElement\n      if (dom(api.panel)?.contains(activeElement)) return // Already focused within Dialog\n\n      focusIn(dom(api.panel)!, Focus.First)\n    })\n\n    // Handle Tab / Shift+Tab focus positioning\n    useWindowEvent('keydown', (event: KeyboardEvent) => {\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!dom(api.panel)) return\n\n      if (event.key !== Keys.Tab) return\n      if (!document.activeElement) return\n      if (!dom(api.panel)?.contains(document.activeElement)) return\n\n      // We will take-over the default tab behaviour so that we have a bit\n      // control over what is focused next. It will behave exactly the same,\n      // but it will also \"fix\" some issues based on whether you are using a\n      // Portal or not.\n      event.preventDefault()\n\n      let result = focusIn(dom(api.panel)!, event.shiftKey ? Focus.Previous : Focus.Next)\n\n      if (result === FocusResult.Underflow) {\n        return dom(api.button)?.focus()\n      } else if (result === FocusResult.Overflow) {\n        if (!dom(api.button)) return\n\n        let elements = getFocusableElements()\n        let buttonIdx = elements.indexOf(dom(api.button)!)\n\n        let nextElements = elements\n          .splice(buttonIdx + 1) // Elements after button\n          .filter(element => !dom(api.panel)?.contains(element)) // Ignore items in panel\n\n        // Try to focus the next element, however it could fail if we are in a\n        // Portal that happens to be the very last one in the DOM. In that\n        // case we would Error (because nothing after the button is\n        // focusable). Therefore we will try and focus the very first item in\n        // the document.body.\n        if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n          focusIn(document.body, Focus.First)\n        }\n      }\n    })\n\n    // Handle focus out when we are in special \"focus\" mode\n    useWindowEvent(\n      'focus',\n      () => {\n        if (!focus) return\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!dom(api.panel)) return\n        if (dom(api.panel)?.contains(document.activeElement as HTMLElement)) return\n        api.closePopover()\n      },\n      true\n    )\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      handleKeyDown(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Escape:\n            if (api.popoverState.value !== PopoverStates.Open) return\n            if (!dom(api.panel)) return\n            if (!dom(api.panel)?.contains(document.activeElement)) return\n            event.preventDefault()\n            event.stopPropagation()\n            api.closePopover()\n            dom(api.button)?.focus()\n            break\n        }\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverGroup = defineComponent({\n  name: 'PopoverGroup',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let propsWeControl = { ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverGroup',\n    })\n  },\n  setup() {\n    let groupRef = ref<HTMLElement | null>(null)\n    let popovers = ref<PopoverRegisterBag[]>([])\n\n    function unregisterPopover(registerBag: PopoverRegisterBag) {\n      let idx = popovers.value.indexOf(registerBag)\n      if (idx !== -1) popovers.value.splice(idx, 1)\n    }\n\n    function registerPopover(registerBag: PopoverRegisterBag) {\n      popovers.value.push(registerBag)\n      return () => {\n        unregisterPopover(registerBag)\n      }\n    }\n\n    function isFocusWithinPopoverGroup() {\n      let element = document.activeElement as HTMLElement\n\n      if (dom(groupRef)?.contains(element)) return true\n\n      // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n      return popovers.value.some(bag => {\n        return (\n          document.getElementById(bag.buttonId)?.contains(element) ||\n          document.getElementById(bag.panelId)?.contains(element)\n        )\n      })\n    }\n\n    function closeOthers(buttonId: string) {\n      for (let popover of popovers.value) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    }\n\n    provide(PopoverGroupContext, {\n      registerPopover,\n      unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    })\n\n    return { el: groupRef }\n  },\n})\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet LabelContext = Symbol('LabelContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, unknown>\n  name: string\n  props: Record<string, unknown>\n}>\n\nfunction useLabelContext() {\n  let context = inject(LabelContext, null)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\nexport function useLabels({\n  slot = {},\n  name = 'Label',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let labelIds = ref<string[]>([])\n  function register(value: string) {\n    labelIds.value.push(value)\n\n    return () => {\n      let idx = labelIds.value.indexOf(value)\n      if (idx === -1) return\n      labelIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(LabelContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() => (labelIds.value.length > 0 ? labelIds.value.join(' ') : undefined))\n}\n\n// ---\n\nexport let Label = defineComponent({\n  name: 'Label',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    passive: { type: [Boolean], default: false },\n  },\n  render() {\n    let { name = 'Label', slot = {}, props = {} } = this.context\n    let { passive, ...passThroughProps } = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n    let allProps = { ...passThroughProps, ...propsWeControl }\n\n    // @ts-expect-error props are dynamic via context, some components will\n    //                  provide an onClick then we can delete it.\n    if (passive) delete allProps['onClick']\n\n    return render({\n      props: allProps,\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useLabelContext()\n    let id = `headlessui-label-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n\n  // Types\n  InjectionKey,\n  Ref,\n  UnwrapRef,\n} from 'vue'\nimport { dom } from '../../utils/dom'\nimport { Keys } from '../../keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: Ref<HTMLElement | null>\n  propsRef: Ref<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  // State\n  options: Ref<Option[]>\n  value: Ref<unknown>\n  disabled: Ref<boolean>\n  firstOption: Ref<Option | undefined>\n  containsCheckedOption: Ref<boolean>\n\n  // State mutators\n  change(nextValue: unknown): boolean\n  registerOption(action: Option): void\n  unregisterOption(id: Option['id']): void\n}\n\nlet RadioGroupContext = Symbol('RadioGroupContext') as InjectionKey<StateDefinition>\n\nfunction useRadioGroupContext(component: string) {\n  let context = inject(RadioGroupContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let RadioGroup = defineComponent({\n  name: 'RadioGroup',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  render() {\n    let { modelValue, disabled, ...passThroughProps } = this.$props\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'radiogroup',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroup',\n    })\n  },\n  setup(props, { emit }) {\n    let radioGroupRef = ref<HTMLElement | null>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      options,\n      value,\n      disabled: computed(() => props.disabled),\n      firstOption: computed(() =>\n        options.value.find(option => {\n          if (option.propsRef.disabled) return false\n          return true\n        })\n      ),\n      containsCheckedOption: computed(() =>\n        options.value.some(option => toRaw(option.propsRef.value) === toRaw(props.modelValue))\n      ),\n      change(nextValue: unknown) {\n        if (props.disabled) return false\n        if (value.value === nextValue) return false\n        let nextOption = options.value.find(\n          option => toRaw(option.propsRef.value) === toRaw(nextValue)\n        )?.propsRef\n        if (nextOption?.disabled) return false\n        emit('update:modelValue', nextValue)\n        return true\n      },\n      registerOption(action: UnwrapRef<Option>) {\n        let orderMap = Array.from(\n          radioGroupRef.value?.querySelectorAll('[id^=\"headlessui-radiogroup-option-\"]')!\n        ).reduce(\n          (lookup, element, index) => Object.assign(lookup, { [element.id]: index }),\n          {}\n        ) as Record<string, number>\n\n        options.value.push(action)\n        options.value.sort((a, z) => orderMap[a.id] - orderMap[z.id])\n      },\n      unregisterOption(id: Option['id']) {\n        let idx = options.value.findIndex(radio => radio.id === id)\n        if (idx === -1) return\n        options.value.splice(idx, 1)\n      },\n    }\n\n    // @ts-expect-error ...\n    provide(RadioGroupContext, api)\n\n    useTreeWalker({\n      container: computed(() => dom(radioGroupRef)),\n      accept(node) {\n        if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (!radioGroupRef.value) return\n      if (!radioGroupRef.value.contains(event.target as HTMLElement)) return\n\n      let all = options.value\n        .filter(option => option.propsRef.disabled === false)\n        .map(radio => radio.element) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.value.find(\n              option => option.element === document.activeElement\n            )\n            if (activeOption) api.change(activeOption.propsRef.value)\n          }\n          break\n      }\n    }\n\n    let id = `headlessui-radiogroup-${useId()}`\n\n    return {\n      id,\n      labelledby,\n      describedby,\n      el: radioGroupRef,\n      handleKeyDown,\n    }\n  },\n})\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nexport let RadioGroupOption = defineComponent({\n  name: 'RadioGroupOption',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  render() {\n    let { value, disabled, ...passThroughProps } = this.$props\n\n    let slot = {\n      checked: this.checked,\n      disabled: this.disabled,\n      active: Boolean(this.state & OptionState.Active),\n    }\n\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'radio',\n      'aria-checked': this.checked ? 'true' : 'false',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      'aria-disabled': this.disabled ? true : undefined,\n      tabIndex: this.tabIndex,\n      onClick: this.disabled ? undefined : this.handleClick,\n      onFocus: this.disabled ? undefined : this.handleFocus,\n      onBlur: this.disabled ? undefined : this.handleBlur,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroupOption',\n    })\n  },\n  setup(props) {\n    let api = useRadioGroupContext('RadioGroupOption')\n    let id = `headlessui-radiogroup-option-${useId()}`\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let optionRef = ref<HTMLElement | null>(null)\n    let propsRef = computed(() => ({ value: props.value, disabled: props.disabled }))\n    let state = ref(OptionState.Empty)\n\n    onMounted(() => api.registerOption({ id, element: optionRef, propsRef }))\n    onUnmounted(() => api.unregisterOption(id))\n\n    let isFirstOption = computed(() => api.firstOption.value?.id === id)\n    let disabled = computed(() => api.disabled.value || props.disabled)\n    let checked = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    return {\n      id,\n      el: optionRef,\n      labelledby,\n      describedby,\n      state,\n      disabled,\n      checked,\n      tabIndex: computed(() => {\n        if (disabled.value) return -1\n        if (checked.value) return 0\n        if (!api.containsCheckedOption.value && isFirstOption.value) return 0\n        return -1\n      }),\n      handleClick() {\n        if (!api.change(props.value)) return\n\n        state.value |= OptionState.Active\n        optionRef.value?.focus()\n      },\n      handleFocus() {\n        state.value |= OptionState.Active\n      },\n      handleBlur() {\n        state.value &= ~OptionState.Active\n      },\n    }\n  },\n})\n\n// ---\n\nexport let RadioGroupLabel = Label\nexport let RadioGroupDescription = Description\n", "import {\n  defineComponent,\n  inject,\n  provide,\n  ref,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () => render({ props, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: { 'update:modelValue': (_value: boolean) => true },\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: Boolean, default: false },\n  },\n  render() {\n    let slot = { checked: this.$props.modelValue }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'switch',\n      type: this.type,\n      tabIndex: 0,\n      'aria-checked': this.$props.modelValue,\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n      onKeyup: this.handleKeyUp,\n      onKeypress: this.handleKeyPress,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Switch',\n    })\n  },\n  setup(props, { emit, attrs }) {\n    let api = inject(GroupContext, null)\n    let id = `headlessui-switch-${useId()}`\n\n    function toggle() {\n      emit('update:modelValue', !props.modelValue)\n    }\n\n    let internalSwitchRef = ref(null)\n    let switchRef = api === null ? internalSwitchRef : api.switchRef\n\n    return {\n      id,\n      el: switchRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        switchRef\n      ),\n      labelledby: api?.labelledby,\n      describedby: api?.describedby,\n      handleClick(event: MouseEvent) {\n        event.preventDefault()\n        toggle()\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (event.key !== Keys.Tab) event.preventDefault()\n        if (event.key === Keys.Space) toggle()\n      },\n      // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n      handleKeyPress(event: KeyboardEvent) {\n        event.preventDefault()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n", "import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { dom } from '../../utils/dom'\nimport { match } from '../../utils/match'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ntype StateDefinition = {\n  // State\n  selectedIndex: Ref<number | null>\n  orientation: Ref<'vertical' | 'horizontal'>\n  activation: Ref<'auto' | 'manual'>\n\n  tabs: Ref<Ref<HTMLElement | null>[]>\n  panels: Ref<Ref<HTMLElement | null>[]>\n\n  // State mutators\n  setSelectedIndex(index: number): void\n  registerTab(tab: Ref<HTMLElement | null>): void\n  unregisterTab(tab: Ref<HTMLElement | null>): void\n  registerPanel(panel: Ref<HTMLElement | null>): void\n  unregisterPanel(panel: Ref<HTMLElement | null>): void\n}\n\nlet TabsContext = Symbol('TabsContext') as InjectionKey<StateDefinition>\n\nfunction useTabsContext(component: string) {\n  let context = inject(TabsContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <TabGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let TabGroup = defineComponent({\n  name: 'TabGroup',\n  emits: {\n    change: (_index: number) => true,\n  },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultIndex: { type: [Number], default: 0 },\n    vertical: { type: [Boolean], default: false },\n    manual: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let selectedIndex = ref<StateDefinition['selectedIndex']['value']>(null)\n    let tabs = ref<StateDefinition['tabs']['value']>([])\n    let panels = ref<StateDefinition['panels']['value']>([])\n\n    let api = {\n      selectedIndex,\n      orientation: computed(() => (props.vertical ? 'vertical' : 'horizontal')),\n      activation: computed(() => (props.manual ? 'manual' : 'auto')),\n      tabs,\n      panels,\n      setSelectedIndex(index: number) {\n        if (selectedIndex.value === index) return\n        selectedIndex.value = index\n        emit('change', index)\n      },\n      registerTab(tab: typeof tabs['value'][number]) {\n        if (!tabs.value.includes(tab)) tabs.value.push(tab)\n      },\n      unregisterTab(tab: typeof tabs['value'][number]) {\n        let idx = tabs.value.indexOf(tab)\n        if (idx !== -1) tabs.value.slice(idx, 1)\n      },\n      registerPanel(panel: typeof panels['value'][number]) {\n        if (!panels.value.includes(panel)) panels.value.push(panel)\n      },\n      unregisterPanel(panel: typeof panels['value'][number]) {\n        let idx = panels.value.indexOf(panel)\n        if (idx !== -1) panels.value.slice(idx, 1)\n      },\n    }\n\n    provide(TabsContext, api)\n\n    onMounted(() => {\n      if (api.tabs.value.length <= 0) return console.log('bail')\n      if (selectedIndex.value !== null) return console.log('bail 2')\n\n      let tabs = api.tabs.value.map(tab => dom(tab)).filter(Boolean) as HTMLElement[]\n      let focusableTabs = tabs.filter(tab => !tab.hasAttribute('disabled'))\n\n      // Underflow\n      if (props.defaultIndex < 0) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[0])\n      }\n\n      // Overflow\n      else if (props.defaultIndex > api.tabs.value.length) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[focusableTabs.length - 1])\n      }\n\n      // Middle\n      else {\n        let before = tabs.slice(0, props.defaultIndex)\n        let after = tabs.slice(props.defaultIndex)\n\n        let next = [...after, ...before].find(tab => focusableTabs.includes(tab))\n        if (!next) return\n\n        selectedIndex.value = tabs.indexOf(next)\n      }\n    })\n\n    return () => {\n      let slot = { selectedIndex: selectedIndex.value }\n\n      return render({\n        props: omit(props, ['defaultIndex', 'manual', 'vertical']),\n        slot,\n        slots,\n        attrs,\n        name: 'TabGroup',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let TabList = defineComponent({\n  name: 'TabList',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useTabsContext('TabList')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      let propsWeControl = {\n        role: 'tablist',\n        'aria-orientation': api.orientation.value,\n      }\n      let passThroughProps = props\n\n      return render({\n        props: { ...passThroughProps, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'TabList',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let Tab = defineComponent({\n  name: 'Tab',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useTabsContext('Tab')\n\n    let slot = { selected: this.selected }\n    let propsWeControl = {\n      ref: 'el',\n      onKeydown: this.handleKeyDown,\n      onFocus: api.activation.value === 'manual' ? this.handleFocus : this.handleSelection,\n      onClick: this.handleSelection,\n      id: this.id,\n      role: 'tab',\n      type: this.type,\n      'aria-controls': api.panels.value[this.myIndex]?.value?.id,\n      'aria-selected': this.selected,\n      tabIndex: this.selected ? 0 : -1,\n      disabled: this.$props.disabled ? true : undefined,\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n      Object.assign(propsWeControl, { ['data-headlessui-index']: this.myIndex })\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Tab',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useTabsContext('Tab')\n    let id = `headlessui-tabs-tab-${useId()}`\n\n    let tabRef = ref()\n\n    onMounted(() => api.registerTab(tabRef))\n    onUnmounted(() => api.unregisterTab(tabRef))\n\n    let myIndex = computed(() => api.tabs.value.indexOf(tabRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let list = api.tabs.value.map(tab => dom(tab)).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        api.setSelectedIndex(myIndex.value)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(api.orientation.value, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    }\n\n    function handleFocus() {\n      dom(tabRef)?.focus()\n    }\n\n    function handleSelection() {\n      if (props.disabled) return\n\n      dom(tabRef)?.focus()\n      api.setSelectedIndex(myIndex.value)\n    }\n\n    return {\n      el: tabRef,\n      id,\n      selected,\n      myIndex,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        tabRef\n      ),\n      handleKeyDown,\n      handleFocus,\n      handleSelection,\n    }\n  },\n})\n\n// ---\n\nexport let TabPanels = defineComponent({\n  name: 'TabPanels',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useTabsContext('TabPanels')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      return render({\n        props,\n        slot,\n        attrs,\n        slots,\n        name: 'TabPanels',\n      })\n    }\n  },\n})\n\nexport let TabPanel = defineComponent({\n  name: 'TabPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useTabsContext('TabPanel')\n\n    let slot = { selected: this.selected }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'tabpanel',\n      'aria-labelledby': api.tabs.value[this.myIndex]?.value?.id,\n      tabIndex: this.selected ? 0 : -1,\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n      Object.assign(propsWeControl, { ['data-headlessui-index']: this.myIndex })\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.Static | Features.RenderStrategy,\n      visible: this.selected,\n      name: 'TabPanel',\n    })\n  },\n  setup() {\n    let api = useTabsContext('TabPanel')\n    let id = `headlessui-tabs-panel-${useId()}`\n\n    let panelRef = ref()\n\n    onMounted(() => api.registerPanel(panelRef))\n    onUnmounted(() => api.unregisterPanel(panelRef))\n\n    let myIndex = computed(() => api.panels.value.indexOf(panelRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    return { id, el: panelRef, selected, myIndex }\n  },\n})\n", "export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n", "export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n", "import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n", "import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\n\nimport { Features, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\nimport {\n  useOpenClosedProvider,\n  State,\n  useOpenClosed,\n  hasOpenClosed,\n} from '../../internal/open-closed'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter(className => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction hasTransitionContext() {\n  return inject(TransitionContext, null) !== null\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    if (this.renderAsRoot) {\n      return h(\n        TransitionRoot,\n        {\n          ...this.$props,\n          onBeforeEnter: () => this.$emit('beforeEnter'),\n          onAfterEnter: () => this.$emit('afterEnter'),\n          onBeforeLeave: () => this.$emit('beforeLeave'),\n          onAfterLeave: () => this.$emit('afterLeave'),\n        },\n        this.$slots\n      )\n    }\n\n    let {\n      appear,\n      show,\n\n      // Class names\n      enter,\n      enterFrom,\n      enterTo,\n      entered,\n      leave,\n      leaveFrom,\n      leaveTo,\n      ...rest\n    } = this.$props\n\n    let propsWeControl = { ref: 'el' }\n    let passthroughProps = rest\n\n    return render({\n      props: { ...passthroughProps, ...propsWeControl },\n      slot: {},\n      slots: this.$slots,\n      attrs: this.$attrs,\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'TransitionChild',\n    })\n  },\n  setup(props, { emit }) {\n    if (!hasTransitionContext() && hasOpenClosed()) {\n      return {\n        renderAsRoot: true,\n      }\n    }\n\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let enteredClasses = splitClasses(props.entered)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(\n              node,\n              enterClasses,\n              enterFromClasses,\n              enterToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n                if (reason === Reason.Finished) emit('afterEnter')\n              }\n            )\n          : transition(\n              node,\n              leaveClasses,\n              leaveFromClasses,\n              leaveToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n\n                if (reason !== Reason.Finished) return\n\n                // When we don't have children anymore we can safely unregister from the parent and hide\n                // ourselves.\n                if (!hasChildren(nesting)) {\n                  state.value = TreeStates.Hidden\n                  unregister(id)\n                  emit('afterLeave')\n                }\n              }\n            )\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show, appear],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n\n    provide(NestingContext, nesting)\n    useOpenClosedProvider(\n      computed(() =>\n        match(state.value, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })\n      )\n    )\n\n    return { el: container, renderAsRoot: false, state }\n  },\n})\n\n// ---\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    let { show, appear, unmount, ...passThroughProps } = this.$props\n    let sharedProps = { unmount }\n\n    return render({\n      props: {\n        ...sharedProps,\n        as: 'template',\n      },\n      slot: {},\n      slots: {\n        ...this.$slots,\n        default: () => [\n          h(\n            TransitionChild,\n            {\n              onBeforeEnter: () => this.$emit('beforeEnter'),\n              onAfterEnter: () => this.$emit('afterEnter'),\n              onBeforeLeave: () => this.$emit('beforeLeave'),\n              onAfterLeave: () => this.$emit('afterLeave'),\n              ...this.$attrs,\n              ...sharedProps,\n              ...passThroughProps,\n            },\n            this.$slots.default\n          ),\n        ],\n      },\n      attrs: {},\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'Transition',\n    })\n  },\n  setup(props) {\n    let usesOpenClosedState = useOpenClosed()\n\n    let show = computed(() => {\n      if (props.show === null && usesOpenClosedState !== null) {\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n\n      return props.show\n    })\n\n    watchEffect(() => {\n      if (![true, false].includes(show.value)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(show.value ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = { value: true }\n    let transitionBag = {\n      show,\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (show.value) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return { state, show }\n  },\n})\n"],
  "mappings": "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",
  "names": []
}
