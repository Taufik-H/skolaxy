{"version":3,"file":"use-inert-others.esm.js","sources":["../../src/hooks/use-inert-others.ts"],"sourcesContent":["import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect(onInvalidate => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n"],"names":["CHILDREN_SELECTOR","process","env","NODE_ENV","interactables","Set","originals","Map","inert","element","setAttribute","restore","original","get","removeAttribute","useInertOthers","container","enabled","ref","watchEffect","onInvalidate","value","add","keys","contains","document","querySelectorAll","forEach","child","HTMLElement","interactable","size","set","getAttribute","has"],"mappings":"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"}