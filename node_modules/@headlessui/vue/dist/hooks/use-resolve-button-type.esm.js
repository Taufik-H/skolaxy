import { ref, onMounted, watchEffect } from 'vue';
import { dom } from '../utils/dom.esm.js';

function resolveType(type, as) {
  if (type) return type;
  var tag = as != null ? as : 'button';
  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button';
  return undefined;
}

function useResolveButtonType(data, refElement) {
  var type = ref(resolveType(data.value.type, data.value.as));
  onMounted(function () {
    type.value = resolveType(data.value.type, data.value.as);
  });
  watchEffect(function () {
    var _dom;

    if (type.value) return;
    if (!dom(refElement)) return;

    if (dom(refElement) instanceof HTMLButtonElement && !((_dom = dom(refElement)) == null ? void 0 : _dom.hasAttribute('type'))) {
      type.value = 'button';
    }
  });
  return type;
}

export { useResolveButtonType };
//# sourceMappingURL=use-resolve-button-type.esm.js.map
