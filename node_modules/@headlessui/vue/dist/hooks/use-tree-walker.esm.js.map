{"version":3,"file":"use-tree-walker.esm.js","sources":["../../src/hooks/use-tree-walker.ts"],"sourcesContent":["import { watchEffect, ComputedRef } from 'vue'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n"],"names":["useTreeWalker","container","accept","walk","enabled","watchEffect","root","value","undefined","acceptNode","Object","assign","node","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode"],"mappings":";;SASgBA;MACdC,iBAAAA;MACAC,cAAAA;MACAC,YAAAA;MACAC,eAAAA;AAOAC,EAAAA,WAAW,CAAC;AACV,QAAIC,IAAI,GAAGL,SAAS,CAACM,KAArB;AACA,QAAI,CAACD,IAAL,EAAW;AACX,QAAIF,OAAO,KAAKI,SAAZ,IAAyB,CAACJ,OAAO,CAACG,KAAtC,EAA6C;AAE7C,QAAIE,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,UAACC,IAAD;AAAA,aAAuBV,MAAM,CAACU,IAAD,CAA7B;AAAA,KAAd,EAAmD;AAAEH,MAAAA,UAAU,EAAEP;AAAd,KAAnD,CAAjB;AACA,QAAIW,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0BT,IAA1B,EAAgCU,UAAU,CAACC,YAA3C,EAAyDR,UAAzD,EAAqE,KAArE,CAAb;;AAEA,WAAOI,MAAM,CAACK,QAAP,EAAP;AAA0Bf,MAAAA,IAAI,CAACU,MAAM,CAACM,WAAR,CAAJ;AAA1B;AACD,GATU,CAAX;AAUD;;;;"}