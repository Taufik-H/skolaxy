{"version":3,"file":"use-resolve-button-type.esm.js","sources":["../../src/hooks/use-resolve-button-type.ts"],"sourcesContent":["import { ref, onMounted, watchEffect, Ref } from 'vue'\nimport { dom } from '../utils/dom'\n\nfunction resolveType(type: unknown, as: string | object) {\n  if (type) return type\n\n  let tag = as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType(\n  data: Ref<{ as: string | object; type?: unknown }>,\n  refElement: Ref<HTMLElement | null>\n) {\n  let type = ref(resolveType(data.value.type, data.value.as))\n\n  onMounted(() => {\n    type.value = resolveType(data.value.type, data.value.as)\n  })\n\n  watchEffect(() => {\n    if (type.value) return\n    if (!dom(refElement)) return\n\n    if (dom(refElement) instanceof HTMLButtonElement && !dom(refElement)?.hasAttribute('type')) {\n      type.value = 'button'\n    }\n  })\n\n  return type\n}\n"],"names":["resolveType","type","as","tag","toLowerCase","undefined","useResolveButtonType","data","refElement","ref","value","onMounted","watchEffect","dom","HTMLButtonElement","hasAttribute"],"mappings":";;;AAGA,SAASA,WAAT,CAAqBC,IAArB,EAAoCC,EAApC;AACE,MAAID,IAAJ,EAAU,OAAOA,IAAP;AAEV,MAAIE,GAAG,GAAGD,EAAH,WAAGA,EAAH,GAAS,QAAhB;AACA,MAAI,OAAOC,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACC,WAAJ,OAAsB,QAArD,EAA+D,OAAO,QAAP;AAE/D,SAAOC,SAAP;AACD;;SAEeC,qBACdC,MACAC;AAEA,MAAIP,IAAI,GAAGQ,GAAG,CAACT,WAAW,CAACO,IAAI,CAACG,KAAL,CAAWT,IAAZ,EAAkBM,IAAI,CAACG,KAAL,CAAWR,EAA7B,CAAZ,CAAd;AAEAS,EAAAA,SAAS,CAAC;AACRV,IAAAA,IAAI,CAACS,KAAL,GAAaV,WAAW,CAACO,IAAI,CAACG,KAAL,CAAWT,IAAZ,EAAkBM,IAAI,CAACG,KAAL,CAAWR,EAA7B,CAAxB;AACD,GAFQ,CAAT;AAIAU,EAAAA,WAAW,CAAC;;;AACV,QAAIX,IAAI,CAACS,KAAT,EAAgB;AAChB,QAAI,CAACG,GAAG,CAACL,UAAD,CAAR,EAAsB;;AAEtB,QAAIK,GAAG,CAACL,UAAD,CAAH,YAA2BM,iBAA3B,IAAgD,UAACD,GAAG,CAACL,UAAD,CAAJ,qBAAC,KAAiBO,YAAjB,CAA8B,MAA9B,CAAD,CAApD,EAA4F;AAC1Fd,MAAAA,IAAI,CAACS,KAAL,GAAa,QAAb;AACD;AACF,GAPU,CAAX;AASA,SAAOT,IAAP;AACD;;;;"}