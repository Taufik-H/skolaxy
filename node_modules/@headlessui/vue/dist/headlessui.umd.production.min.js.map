{"version":3,"file":"headlessui.umd.production.min.js","sources":["../src/utils/match.ts","../src/utils/render.ts","../src/keyboard.ts","../src/hooks/use-id.ts","../src/utils/focus-management.ts","../src/hooks/use-window-event.ts","../src/internal/dom-containers.ts","../src/hooks/use-focus-trap.ts","../src/hooks/use-inert-others.ts","../src/internal/stack-context.ts","../src/internal/portal-force-root.ts","../src/components/portal/portal.ts","../src/components/description/description.ts","../src/utils/dom.ts","../src/internal/open-closed.ts","../src/components/dialog/dialog.ts","../src/components/disclosure/disclosure.ts","../src/hooks/use-resolve-button-type.ts","../src/utils/calculate-active-index.ts","../src/components/listbox/listbox.ts","../src/components/focus-trap/focus-trap.ts","../src/components/menu/menu.ts","../src/hooks/use-tree-walker.ts","../src/components/popover/popover.ts","../src/components/label/label.ts","../src/components/radio-group/radio-group.ts","../src/components/switch/switch.ts","../src/components/tabs/tabs.ts","../src/components/transitions/utils/transition.ts","../src/utils/disposables.ts","../src/utils/once.ts","../src/components/transitions/transition.ts"],"sourcesContent":["export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import { h, cloneVNode, Slots } from 'vue'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\nexport function render({\n  visible = true,\n  features = Features.None,\n  ...main\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n} & {\n  features?: Features\n  visible?: boolean\n}) {\n  // Visible always render\n  if (visible) return _render(main)\n\n  if (features & Features.Static) {\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (main.props.static) return _render(main)\n  }\n\n  if (features & Features.RenderStrategy) {\n    let strategy = main.props.unmount ?? true ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render({\n          ...main,\n          props: { ...main.props, hidden: true, style: { display: 'none' } },\n        })\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(main)\n}\n\nfunction _render({\n  props,\n  attrs,\n  slots,\n  slot,\n  name,\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n}) {\n  let { as, ...passThroughProps } = omit(props, ['unmount', 'static'])\n\n  let children = slots.default?.(slot)\n\n  if (as === 'template') {\n    if (Object.keys(passThroughProps).length > 0 || Object.keys(attrs).length > 0) {\n      let [firstChild, ...other] = children ?? []\n\n      if (!isValidElement(firstChild) || other.length > 0) {\n        throw new Error(\n          [\n            'Passing props on \"template\"!',\n            '',\n            `The current component <${name} /> is rendering a \"template\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .concat(Object.keys(attrs))\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneVNode(firstChild, passThroughProps as Record<string, any>)\n    }\n\n    if (Array.isArray(children) && children.length === 1) {\n      return children[0]\n    }\n\n    return children\n  }\n\n  return h(as, passThroughProps, children)\n}\n\nexport function omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n\nfunction isValidElement(input: any): boolean {\n  if (input == null) return false // No children\n  if (typeof input.type === 'string') return true // 'div', 'span', ...\n  if (typeof input.type === 'object') return true // Other components\n  if (typeof input.type === 'function') return true // Built-ins like Transition\n  return false // Comments, strings, ...\n}\n","// TODO: This must already exist somewhere, right? ðŸ¤”\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","let id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  return generateId()\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","import { watchEffect } from 'vue'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (typeof window === 'undefined') return\n\n  watchEffect(onInvalidate => {\n    window.addEventListener(type, listener, options)\n\n    onInvalidate(() => {\n      window.removeEventListener(type, listener, options)\n    })\n  })\n}\n","export function contains(containers: Set<HTMLElement>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.contains(element)) return true\n  }\n\n  return false\n}\n","import {\n  onUnmounted,\n  onUpdated,\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\nimport { Keys } from '../keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from '../hooks/use-window-event'\nimport { contains } from '../internal/dom-containers'\n\nexport function useFocusTrap(\n  containers: Ref<Set<HTMLElement>>,\n  enabled: Ref<boolean> = ref(true),\n  options: Ref<{ initialFocus?: HTMLElement | null }> = ref({})\n) {\n  let restoreElement = ref<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = ref<HTMLElement | null>(null)\n\n  function handleFocus() {\n    if (!enabled.value) return\n    if (containers.value.size !== 1) return\n    let { initialFocus } = options.value\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus) {\n      if (initialFocus === activeElement) {\n        return // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.value, activeElement)) {\n      return // Already focused within Dialog\n    }\n\n    restoreElement.value = activeElement\n\n    // Try to focus the initialFocus ref\n    if (initialFocus) {\n      focusElement(initialFocus)\n    } else {\n      let couldFocus = false\n      for (let container of containers.value) {\n        let result = focusIn(container, Focus.First)\n        if (result === FocusResult.Success) {\n          couldFocus = true\n          break\n        }\n      }\n\n      if (!couldFocus) console.warn('There are no focusable elements inside the <FocusTrap />')\n    }\n\n    previousActiveElement.value = document.activeElement as HTMLElement\n  }\n\n  // Restore when `enabled` becomes false\n  function restore() {\n    focusElement(restoreElement.value)\n    restoreElement.value = null\n    previousActiveElement.value = null\n  }\n\n  // Handle initial focus\n  watchEffect(handleFocus)\n\n  onUpdated(() => {\n    enabled.value ? handleFocus() : restore()\n  })\n  onUnmounted(restore)\n\n  // Handle Tab & Shift+Tab keyboard events\n  useWindowEvent('keydown', event => {\n    if (!enabled.value) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (containers.value.size !== 1) return\n\n    event.preventDefault()\n\n    for (let element of containers.value) {\n      let result = focusIn(\n        element,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      )\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.value = document.activeElement as HTMLElement\n        break\n      }\n    }\n  })\n\n  // Prevent programmatically escaping\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!enabled.value) return\n      if (containers.value.size !== 1) return\n\n      let previous = previousActiveElement.value\n      if (!previous) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(containers.value, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.value = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.value)\n      }\n    },\n    true\n  )\n}\n","import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect(onInvalidate => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n","import {\n  inject,\n  provide,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\ntype OnUpdate = (message: StackMessage, element: HTMLElement) => void\n\nlet StackContext = Symbol('StackContext') as InjectionKey<OnUpdate>\n\nexport enum StackMessage {\n  AddElement,\n  RemoveElement,\n}\n\nexport function useStackContext() {\n  return inject(StackContext, () => {})\n}\n\nexport function useElemenStack(element: Ref<HTMLElement | null> | null) {\n  let notify = useStackContext()\n\n  watchEffect(onInvalidate => {\n    let domElement = element?.value\n    if (!domElement) return\n\n    notify(StackMessage.AddElement, domElement)\n    onInvalidate(() => notify(StackMessage.RemoveElement, domElement!))\n  })\n}\n\nexport function useStackProvider(onUpdate?: OnUpdate) {\n  let parentUpdate = useStackContext()\n\n  function notify(...args: Parameters<OnUpdate>) {\n    // Notify our layer\n    onUpdate?.(...args)\n\n    // Notify the parent\n    parentUpdate(...args)\n  }\n\n  provide(StackContext, notify)\n}\n","import {\n  defineComponent,\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n} from 'vue'\nimport { render } from '../utils/render'\n\nlet ForcePortalRootContext = Symbol('ForcePortalRootContext') as InjectionKey<Boolean>\n\nexport function usePortalRoot() {\n  return inject(ForcePortalRootContext, false)\n}\n\nexport let ForcePortalRoot = defineComponent({\n  name: 'ForcePortalRoot',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    force: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    provide(ForcePortalRootContext, props.force)\n\n    return () => {\n      let { force, ...passThroughProps } = props\n      return render({ props: passThroughProps, slot: {}, slots, attrs, name: 'ForcePortalRoot' })\n    }\n  },\n})\n","import {\n  Teleport,\n  defineComponent,\n  h,\n  inject,\n  onUnmounted,\n  provide,\n  reactive,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useElemenStack, useStackProvider } from '../../internal/stack-context'\nimport { usePortalRoot } from '../../internal/portal-force-root'\n\n// ---\n\nfunction getPortalRoot() {\n  let existingRoot = document.getElementById('headlessui-portal-root')\n  if (existingRoot) return existingRoot\n\n  let root = document.createElement('div')\n  root.setAttribute('id', 'headlessui-portal-root')\n  return document.body.appendChild(root)\n}\n\nexport let Portal = defineComponent({\n  name: 'Portal',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let forcePortalRoot = usePortalRoot()\n    let groupContext = inject(PortalGroupContext, null)\n    let myTarget = ref(\n      forcePortalRoot === true\n        ? getPortalRoot()\n        : groupContext === null\n        ? getPortalRoot()\n        : groupContext.resolveTarget()\n    )\n\n    watchEffect(() => {\n      if (forcePortalRoot) return\n      if (groupContext === null) return\n      myTarget.value = groupContext.resolveTarget()\n    })\n\n    let element = ref(null)\n    useElemenStack(element)\n\n    onUnmounted(() => {\n      let root = document.getElementById('headlessui-portal-root')\n      if (!root) return\n      if (myTarget.value !== root) return\n\n      if (myTarget.value.children.length <= 0) {\n        myTarget.value.parentElement?.removeChild(myTarget.value)\n      }\n    })\n\n    useStackProvider()\n\n    return () => {\n      if (myTarget.value === null) return null\n\n      let propsWeControl = {\n        ref: element,\n      }\n\n      return h(\n        // @ts-expect-error Children can be an object, but TypeScript is not happy\n        // with it. Once this is fixed upstream we can remove this assertion.\n        Teleport,\n        { to: myTarget.value },\n        render({\n          props: { ...props, ...propsWeControl },\n          slot: {},\n          attrs,\n          slots,\n          name: 'Portal',\n        })\n      )\n    }\n  },\n})\n\n// ---\n\nlet PortalGroupContext = Symbol('PortalGroupContext') as InjectionKey<{\n  resolveTarget(): HTMLElement | null\n}>\n\nexport let PortalGroup = defineComponent({\n  name: 'PortalGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    target: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots }) {\n    let api = reactive({\n      resolveTarget() {\n        return props.target\n      },\n    })\n\n    provide(PortalGroupContext, api)\n\n    return () => {\n      let { target: _, ...passThroughProps } = props\n\n      return render({ props: passThroughProps, slot: {}, attrs, slots, name: 'PortalGroup' })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet DescriptionContext = Symbol('DescriptionContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Ref<Record<string, any>>\n  name: string\n  props: Record<string, any>\n}>\n\nfunction useDescriptionContext() {\n  let context = inject(DescriptionContext, null)\n  if (context === null) {\n    throw new Error('Missing parent')\n  }\n  return context\n}\n\nexport function useDescriptions({\n  slot = ref({}),\n  name = 'Description',\n  props = {},\n}: {\n  slot?: Ref<Record<string, unknown>>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let descriptionIds = ref<string[]>([])\n\n  function register(value: string) {\n    descriptionIds.value.push(value)\n\n    return () => {\n      let idx = descriptionIds.value.indexOf(value)\n      if (idx === -1) return\n      descriptionIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(DescriptionContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() =>\n    descriptionIds.value.length > 0 ? descriptionIds.value.join(' ') : undefined\n  )\n}\n\n// ---\n\nexport let Description = defineComponent({\n  name: 'Description',\n  props: {\n    as: { type: [Object, String], default: 'p' },\n  },\n  render() {\n    let { name = 'Description', slot = ref({}), props = {} } = this.context\n    let passThroughProps = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: slot.value,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useDescriptionContext()\n    let id = `headlessui-description-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","import { Ref } from 'vue'\n\nexport function dom<T extends HTMLElement>(ref?: Ref<T | null>): T | null {\n  if (ref == null) return null\n  if (ref.value == null) return null\n  return ((ref as Ref<T & { $el: unknown }>).value.$el ?? ref.value) as T | null\n}\n","import {\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nlet Context = Symbol('Context') as InjectionKey<Ref<State>>\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function hasOpenClosed() {\n  return useOpenClosed() !== null\n}\n\nexport function useOpenClosed() {\n  return inject(Context, null)\n}\n\nexport function useOpenClosedProvider(value: Ref<State>) {\n  provide(Context, value)\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  Ref,\n} from 'vue'\n\nimport { render, Features } from '../../utils/render'\nimport { Keys } from '../../keyboard'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { contains } from '../../internal/dom-containers'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { Portal, PortalGroup } from '../portal/portal'\nimport { StackMessage, useStackProvider } from '../../internal/stack-context'\nimport { match } from '../../utils/match'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State } from '../../internal/open-closed'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  dialogState: Ref<DialogStates>\n\n  titleId: Ref<string | null>\n\n  setTitleId(id: string | null): void\n\n  close(): void\n}\n\nlet DialogContext = Symbol('DialogContext') as InjectionKey<StateDefinition>\n\nfunction useDialogContext(component: string) {\n  let context = inject(DialogContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet Missing = 'DC8F892D-2EBD-447C-A4C8-A03058436FF4'\n\nexport let Dialog = defineComponent({\n  name: 'Dialog',\n  inheritAttrs: false, // Manually handling this\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    open: { type: [Boolean, String], default: Missing },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  emits: { close: (_close: boolean) => true },\n  render() {\n    let propsWeControl = {\n      // Manually passthrough the attributes, because Vue can't automatically pass\n      // it to the underlying div because of all the wrapper components below.\n      ...this.$attrs,\n      ref: 'el',\n      id: this.id,\n      role: 'dialog',\n      'aria-modal': this.dialogState === DialogStates.Open ? true : undefined,\n      'aria-labelledby': this.titleId,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n    }\n    let { open: _, initialFocus, ...passThroughProps } = this.$props\n\n    let slot = { open: this.dialogState === DialogStates.Open }\n\n    return h(ForcePortalRoot, { force: true }, () =>\n      h(Portal, () =>\n        h(PortalGroup, { target: this.dialogRef }, () =>\n          h(ForcePortalRoot, { force: false }, () =>\n            render({\n              props: { ...passThroughProps, ...propsWeControl },\n              slot,\n              attrs: this.$attrs,\n              slots: this.$slots,\n              visible: this.visible,\n              features: Features.RenderStrategy | Features.Static,\n              name: 'Dialog',\n            })\n          )\n        )\n      )\n    )\n  },\n  setup(props, { emit }) {\n    let containers = ref<Set<HTMLElement>>(new Set())\n\n    let usesOpenClosedState = useOpenClosed()\n    let open = computed(() => {\n      if (props.open === Missing && usesOpenClosedState !== null) {\n        // Update the `open` prop based on the open closed state\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n      return props.open\n    })\n\n    // Validations\n    let hasOpen = props.open !== Missing || usesOpenClosedState !== null\n\n    if (!hasOpen) {\n      throw new Error(`You forgot to provide an \\`open\\` prop to the \\`Dialog\\`.`)\n    }\n\n    if (typeof open.value !== 'boolean') {\n      throw new Error(\n        `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${\n          open.value === Missing ? undefined : props.open\n        }`\n      )\n    }\n\n    let dialogState = computed(() => (props.open ? DialogStates.Open : DialogStates.Closed))\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return dialogState.value === DialogStates.Open\n    })\n    let internalDialogRef = ref<HTMLDivElement | null>(null)\n    let enabled = ref(dialogState.value === DialogStates.Open)\n\n    onUpdated(() => {\n      enabled.value = dialogState.value === DialogStates.Open\n    })\n\n    let id = `headlessui-dialog-${useId()}`\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    useFocusTrap(containers, enabled, focusTrapOptions)\n    useInertOthers(internalDialogRef, enabled)\n    useStackProvider((message, element) => {\n      return match(message, {\n        [StackMessage.AddElement]() {\n          containers.value.add(element)\n        },\n        [StackMessage.RemoveElement]() {\n          containers.value.delete(element)\n        },\n      })\n    })\n\n    let describedby = useDescriptions({\n      name: 'DialogDescription',\n      slot: computed(() => ({ open: open.value })),\n    })\n\n    let titleId = ref<StateDefinition['titleId']['value']>(null)\n\n    let api = {\n      titleId,\n      dialogState,\n      setTitleId(id: string | null) {\n        if (titleId.value === id) return\n        titleId.value = id\n      },\n      close() {\n        emit('close', false)\n      },\n    }\n\n    provide(DialogContext, api)\n\n    // Handle outside click\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size !== 1) return\n      if (contains(containers.value, target)) return\n\n      api.close()\n      nextTick(() => target?.focus())\n    })\n\n    // Handle `Escape` to close\n    useWindowEvent('keydown', event => {\n      if (event.key !== Keys.Escape) return\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size > 1) return // 1 is myself, otherwise other elements in the Stack\n      event.preventDefault()\n      event.stopPropagation()\n      api.close()\n    })\n\n    // Scroll lock\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n\n      let overflow = document.documentElement.style.overflow\n      let paddingRight = document.documentElement.style.paddingRight\n\n      let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n      document.documentElement.style.overflow = 'hidden'\n      document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n      onInvalidate(() => {\n        document.documentElement.style.overflow = overflow\n        document.documentElement.style.paddingRight = paddingRight\n      })\n    })\n\n    // Trigger close when the FocusTrap gets hidden\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n      let container = dom(internalDialogRef)\n      if (!container) return\n\n      let observer = new IntersectionObserver(entries => {\n        for (let entry of entries) {\n          if (\n            entry.boundingClientRect.x === 0 &&\n            entry.boundingClientRect.y === 0 &&\n            entry.boundingClientRect.width === 0 &&\n            entry.boundingClientRect.height === 0\n          ) {\n            api.close()\n          }\n        }\n      })\n\n      observer.observe(container)\n\n      onInvalidate(() => observer.disconnect())\n    })\n\n    return {\n      id,\n      el: internalDialogRef,\n      dialogRef: internalDialogRef,\n      containers,\n      dialogState,\n      titleId,\n      describedby,\n      visible,\n      open,\n      handleClick(event: MouseEvent) {\n        event.stopPropagation()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogOverlay = defineComponent({\n  name: 'DialogOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let api = useDialogContext('DialogOverlay')\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogOverlay',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogOverlay')\n    let id = `headlessui-dialog-overlay-${useId()}`\n\n    return {\n      id,\n      handleClick(event: MouseEvent) {\n        if (event.target !== event.currentTarget) return\n        event.preventDefault()\n        event.stopPropagation()\n        api.close()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogTitle = defineComponent({\n  name: 'DialogTitle',\n  props: {\n    as: { type: [Object, String], default: 'h2' },\n  },\n  render() {\n    let api = useDialogContext('DialogTitle')\n    let propsWeControl = { id: this.id }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogTitle',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogTitle')\n    let id = `headlessui-dialog-title-${useId()}`\n\n    onMounted(() => {\n      api.setTitleId(id)\n      onUnmounted(() => api.setTitleId(null))\n    })\n\n    return { id }\n  },\n})\n\n// ---\n\nexport let DialogDescription = Description\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  InjectionKey,\n  Ref,\n  computed,\n  watchEffect,\n} from 'vue'\n\nimport { Keys } from '../../keyboard'\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  disclosureState: Ref<DisclosureStates>\n  panel: Ref<HTMLElement | null>\n  panelId: string\n  button: Ref<HTMLButtonElement | null>\n  buttonId: string\n\n  // State mutators\n  toggleDisclosure(): void\n  closeDisclosure(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet DisclosureContext = Symbol('DisclosureContext') as InjectionKey<StateDefinition>\n\nfunction useDisclosureContext(component: string) {\n  let context = inject(DisclosureContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n\n  return context\n}\n\nlet DisclosurePanelContext = Symbol('DisclosurePanelContext') as InjectionKey<string | null>\nfunction useDisclosurePanelContext() {\n  return inject(DisclosurePanelContext, null)\n}\n\n// ---\n\nexport let Disclosure = defineComponent({\n  name: 'Disclosure',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultOpen: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-disclosure-button-${useId()}`\n    let panelId = `headlessui-disclosure-panel-${useId()}`\n\n    let disclosureState = ref<StateDefinition['disclosureState']['value']>(\n      props.defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed\n    )\n    let panelRef = ref<StateDefinition['panel']['value']>(null)\n    let buttonRef = ref<StateDefinition['button']['value']>(null)\n\n    let api = {\n      buttonId,\n      panelId,\n      disclosureState,\n      panel: panelRef,\n      button: buttonRef,\n      toggleDisclosure() {\n        disclosureState.value = match(disclosureState.value, {\n          [DisclosureStates.Open]: DisclosureStates.Closed,\n          [DisclosureStates.Closed]: DisclosureStates.Open,\n        })\n      },\n      closeDisclosure() {\n        if (disclosureState.value === DisclosureStates.Closed) return\n        disclosureState.value = DisclosureStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closeDisclosure()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(DisclosureContext, api)\n    useOpenClosedProvider(\n      computed(() => {\n        return match(disclosureState.value, {\n          [DisclosureStates.Open]: State.Open,\n          [DisclosureStates.Closed]: State.Closed,\n        })\n      })\n    )\n\n    return () => {\n      let { defaultOpen: _, ...passThroughProps } = props\n      let slot = { open: disclosureState.value === DisclosureStates.Open, close: api.close }\n      return render({ props: passThroughProps, slot, slots, attrs, name: 'Disclosure' })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosureButton = defineComponent({\n  name: 'DisclosureButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          ref: 'el',\n          type: this.type,\n          onClick: this.handleClick,\n          onKeydown: this.handleKeyDown,\n        }\n      : {\n          id: this.id,\n          ref: 'el',\n          type: this.type,\n          'aria-expanded': this.$props.disabled\n            ? undefined\n            : api.disclosureState.value === DisclosureStates.Open,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          disabled: this.$props.disabled ? true : undefined,\n          onClick: this.handleClick,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DisclosureButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let panelContext = useDisclosurePanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    let elementRef = ref(null)\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    return {\n      isWithinPanel,\n      id: api.buttonId,\n      el: elementRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        elementRef\n      ),\n      handleClick() {\n        if (props.disabled) return\n\n        if (isWithinPanel) {\n          api.toggleDisclosure()\n          dom(api.button)?.focus()\n        } else {\n          api.toggleDisclosure()\n        }\n      },\n      handleKeyDown(event: KeyboardEvent) {\n        if (props.disabled) return\n\n        if (isWithinPanel) {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault()\n              event.stopPropagation()\n              api.toggleDisclosure()\n              dom(api.button)?.focus()\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault()\n              event.stopPropagation()\n              api.toggleDisclosure()\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Space:\n            // Required for firefox, event.preventDefault() in handleKeyDown for\n            // the Space key doesn't cancel the handleKeyUp, which in turn\n            // triggers a *click*.\n            event.preventDefault()\n            break\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DisclosurePanel = defineComponent({\n  name: 'DisclosurePanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open, close: api.close }\n    let propsWeControl = { id: this.id, ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'DisclosurePanel',\n    })\n  },\n  setup() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    provide(DisclosurePanelContext, api.panelId)\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.disclosureState.value === DisclosureStates.Open\n    })\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      visible,\n    }\n  },\n})\n","import { ref, onMounted, watchEffect, Ref } from 'vue'\nimport { dom } from '../utils/dom'\n\nfunction resolveType(type: unknown, as: string | object) {\n  if (type) return type\n\n  let tag = as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType(\n  data: Ref<{ as: string | object; type?: unknown }>,\n  refElement: Ref<HTMLElement | null>\n) {\n  let type = ref(resolveType(data.value.type, data.value.as))\n\n  onMounted(() => {\n    type.value = resolveType(data.value.type, data.value.as)\n  })\n\n  watchEffect(() => {\n    if (type.value) return\n    if (!dom(refElement)) return\n\n    if (dom(refElement) instanceof HTMLButtonElement && !dom(refElement)?.hasAttribute('type')) {\n      type.value = 'button'\n    }\n  })\n\n  return type\n}\n","function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  ComputedRef,\n  watchEffect,\n  toRaw,\n  watch,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype ListboxOptionDataRef = Ref<{ textValue: string; disabled: boolean; value: unknown }>\ntype StateDefinition = {\n  // State\n  listboxState: Ref<ListboxStates>\n  value: ComputedRef<unknown>\n  orientation: Ref<'vertical' | 'horizontal'>\n\n  labelRef: Ref<HTMLLabelElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ListboxOptionDataRef }[]>\n  searchQuery: Ref<string>\n  activeOptionIndex: Ref<number | null>\n\n  // State mutators\n  closeListbox(): void\n  openListbox(): void\n  goToOption(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerOption(id: string, dataRef: ListboxOptionDataRef): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ListboxContext = Symbol('ListboxContext') as InjectionKey<StateDefinition>\n\nfunction useListboxContext(component: string) {\n  let context = inject(ListboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Listbox = defineComponent({\n  name: 'Listbox',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    horizontal: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let listboxState = ref<StateDefinition['listboxState']['value']>(ListboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      listboxState,\n      value,\n      orientation: computed(() => (props.horizontal ? 'horizontal' : 'vertical')),\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      searchQuery,\n      activeOptionIndex,\n      closeListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        listboxState.value = ListboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Open) return\n        listboxState.value = ListboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => options.value,\n            resolveActiveIndex: () => activeOptionIndex.value,\n            resolveId: option => option.id,\n            resolveDisabled: option => option.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeOptionIndex.value === nextActiveOptionIndex) return\n        searchQuery.value = ''\n        activeOptionIndex.value = nextActiveOptionIndex\n      },\n      search(value: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        searchQuery.value += value.toLowerCase()\n\n        let match = options.value.findIndex(\n          option =>\n            !option.dataRef.disabled && option.dataRef.textValue.startsWith(searchQuery.value)\n        )\n\n        if (match === -1 || match === activeOptionIndex.value) return\n        activeOptionIndex.value = match\n      },\n      clearSearch() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        if (searchQuery.value === '') return\n\n        searchQuery.value = ''\n      },\n      registerOption(id: string, dataRef: ListboxOptionDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        options.value.push({ id, dataRef })\n      },\n      unregisterOption(id: string) {\n        let nextOptions = options.value.slice()\n        let currentActiveOption =\n          activeOptionIndex.value !== null ? nextOptions[activeOptionIndex.value] : null\n        let idx = nextOptions.findIndex(a => a.id === id)\n        if (idx !== -1) nextOptions.splice(idx, 1)\n        options.value = nextOptions\n        activeOptionIndex.value = (() => {\n          if (idx === activeOptionIndex.value) return null\n          if (currentActiveOption === null) return null\n\n          // If we removed the option before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextOptions.indexOf(currentActiveOption)\n        })()\n      },\n      select(value: unknown) {\n        if (props.disabled) return\n        emit('update:modelValue', value)\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (listboxState.value !== ListboxStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(optionsRef)?.contains(target)) api.closeListbox()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ListboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(listboxState.value, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: listboxState.value === ListboxStates.Open, disabled: props.disabled }\n      return render({\n        props: omit(props, ['modelValue', 'onUpdate:modelValue', 'disabled', 'horizontal']),\n        slot,\n        slots,\n        attrs,\n        name: 'Listbox',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxLabel = defineComponent({\n  name: 'ListboxLabel',\n  props: { as: { type: [Object, String], default: 'label' } },\n  render() {\n    let api = useListboxContext('ListboxLabel')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = { id: this.id, ref: 'el', onClick: this.handleClick }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxLabel',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxLabel')\n    let id = `headlessui-listbox-label-${useId()}`\n\n    return {\n      id,\n      el: api.labelRef,\n      handleClick() {\n        dom(api.buttonRef)?.focus({ preventScroll: true })\n      },\n    }\n  },\n})\n\n// ---\n\nexport let ListboxButton = defineComponent({\n  name: 'ListboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useListboxContext('ListboxButton')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: this.type,\n      'aria-haspopup': true,\n      'aria-controls': dom(api.optionsRef)?.id,\n      'aria-expanded': api.disabled.value\n        ? undefined\n        : api.listboxState.value === ListboxStates.Open,\n      'aria-labelledby': api.labelRef.value\n        ? [dom(api.labelRef)?.id, this.id].join(' ')\n        : undefined,\n      disabled: api.disabled.value === true ? true : undefined,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useListboxContext('ListboxButton')\n    let id = `headlessui-listbox-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.listboxState.value === ListboxStates.Open) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openListbox()\n        nextFrame(() => dom(api.optionsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return {\n      id,\n      el: api.buttonRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        api.buttonRef\n      ),\n      handleKeyDown,\n      handleKeyUp,\n      handleClick,\n    }\n  },\n})\n\n// ---\n\nexport let ListboxOptions = defineComponent({\n  name: 'ListboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useListboxContext('ListboxOptions')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeOptionIndex.value === null\n          ? undefined\n          : api.options.value[api.activeOptionIndex.value]?.id,\n      'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n      'aria-orientation': api.orientation.value,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      role: 'listbox',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'ListboxOptions',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxOptions')\n    let id = `headlessui-listbox-options-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeOptionIndex.value !== null) {\n            let { dataRef } = api.options.value[api.activeOptionIndex.value]\n            api.select(dataRef.value)\n          }\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case match(api.orientation.value, {\n          vertical: Keys.ArrowDown,\n          horizontal: Keys.ArrowRight,\n        }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Next)\n\n        case match(api.orientation.value, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.listboxState.value === ListboxStates.Open\n    })\n\n    return { id, el: api.optionsRef, handleKeyDown, visible }\n  },\n})\n\nexport let ListboxOption = defineComponent({\n  name: 'ListboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useListboxContext('ListboxOption')\n    let id = `headlessui-listbox-option-${useId()}`\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    let dataRef = ref<ListboxOptionDataRef['value']>({\n      disabled: props.disabled,\n      value: props.value,\n      textValue: '',\n    })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    onMounted(() => {\n      watch(\n        [api.listboxState, selected],\n        () => {\n          if (api.listboxState.value !== ListboxStates.Open) return\n          if (!selected.value) return\n          api.goToOption(Focus.Specific, id)\n          document.getElementById(id)?.focus?.()\n        },\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (api.listboxState.value !== ListboxStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.select(props.value)\n      api.closeListbox()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        'aria-selected': selected.value === true ? selected.value : undefined,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxOption',\n      })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n\n  // Types\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nexport let FocusTrap = defineComponent({\n  name: 'FocusTrap',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  render() {\n    let slot = {}\n    let propsWeControl = { ref: 'el' }\n    let { initialFocus, ...passThroughProps } = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'FocusTrap',\n    })\n  },\n  setup(props) {\n    let containers = ref(new Set<HTMLElement>())\n    let container = ref<HTMLElement | null>(null)\n    let enabled = ref(true)\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    onMounted(() => {\n      if (!container.value) return\n      containers.value.add(container.value)\n\n      useFocusTrap(containers, enabled, focusTrapOptions)\n    })\n\n    onUnmounted(() => {\n      enabled.value = false\n    })\n\n    return { el: container }\n  },\n})\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  watchEffect,\n} from 'vue'\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype MenuItemDataRef = Ref<{ textValue: string; disabled: boolean }>\ntype StateDefinition = {\n  // State\n  menuState: Ref<MenuStates>\n  buttonRef: Ref<HTMLButtonElement | null>\n  itemsRef: Ref<HTMLDivElement | null>\n  items: Ref<{ id: string; dataRef: MenuItemDataRef }[]>\n  searchQuery: Ref<string>\n  activeItemIndex: Ref<number | null>\n\n  // State mutators\n  closeMenu(): void\n  openMenu(): void\n  goToItem(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerItem(id: string, dataRef: MenuItemDataRef): void\n  unregisterItem(id: string): void\n}\n\nlet MenuContext = Symbol('MenuContext') as InjectionKey<StateDefinition>\n\nfunction useMenuContext(component: string) {\n  let context = inject(MenuContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Menu /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n\n  return context\n}\n\nexport let Menu = defineComponent({\n  name: 'Menu',\n  props: { as: { type: [Object, String], default: 'template' } },\n  setup(props, { slots, attrs }) {\n    let menuState = ref<StateDefinition['menuState']['value']>(MenuStates.Closed)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let itemsRef = ref<StateDefinition['itemsRef']['value']>(null)\n    let items = ref<StateDefinition['items']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeItemIndex = ref<StateDefinition['activeItemIndex']['value']>(null)\n\n    let api = {\n      menuState,\n      buttonRef,\n      itemsRef,\n      items,\n      searchQuery,\n      activeItemIndex,\n      closeMenu: () => {\n        menuState.value = MenuStates.Closed\n        activeItemIndex.value = null\n      },\n      openMenu: () => (menuState.value = MenuStates.Open),\n      goToItem(focus: Focus, id?: string) {\n        let nextActiveItemIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => items.value,\n            resolveActiveIndex: () => activeItemIndex.value,\n            resolveId: item => item.id,\n            resolveDisabled: item => item.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeItemIndex.value === nextActiveItemIndex) return\n        searchQuery.value = ''\n        activeItemIndex.value = nextActiveItemIndex\n      },\n      search(value: string) {\n        searchQuery.value += value.toLowerCase()\n\n        let match = items.value.findIndex(\n          item => item.dataRef.textValue.startsWith(searchQuery.value) && !item.dataRef.disabled\n        )\n\n        if (match === -1 || match === activeItemIndex.value) return\n\n        activeItemIndex.value = match\n      },\n      clearSearch() {\n        searchQuery.value = ''\n      },\n      registerItem(id: string, dataRef: MenuItemDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        items.value.push({ id, dataRef })\n      },\n      unregisterItem(id: string) {\n        let nextItems = items.value.slice()\n        let currentActiveItem =\n          activeItemIndex.value !== null ? nextItems[activeItemIndex.value] : null\n        let idx = nextItems.findIndex(a => a.id === id)\n        if (idx !== -1) nextItems.splice(idx, 1)\n        items.value = nextItems\n        activeItemIndex.value = (() => {\n          if (idx === activeItemIndex.value) return null\n          if (currentActiveItem === null) return null\n\n          // If we removed the item before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextItems.indexOf(currentActiveItem)\n        })()\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (menuState.value !== MenuStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(itemsRef)?.contains(target)) api.closeMenu()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(MenuContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(menuState.value, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: menuState.value === MenuStates.Open }\n      return render({ props, slot, slots, attrs, name: 'Menu' })\n    }\n  },\n})\n\nexport let MenuButton = defineComponent({\n  name: 'MenuButton',\n  props: {\n    disabled: { type: Boolean, default: false },\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useMenuContext('MenuButton')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: this.type,\n      'aria-haspopup': true,\n      'aria-controls': dom(api.itemsRef)?.id,\n      'aria-expanded': this.$props.disabled ? undefined : api.menuState.value === MenuStates.Open,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'MenuButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useMenuContext('MenuButton')\n    let id = `headlessui-menu-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (api.menuState.value === MenuStates.Open) {\n        api.closeMenu()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        api.openMenu()\n        nextFrame(() => dom(api.itemsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return {\n      id,\n      el: api.buttonRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        api.buttonRef\n      ),\n      handleKeyDown,\n      handleKeyUp,\n      handleClick,\n    }\n  },\n})\n\nexport let MenuItems = defineComponent({\n  name: 'MenuItems',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useMenuContext('MenuItems')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeItemIndex.value === null\n          ? undefined\n          : api.items.value[api.activeItemIndex.value]?.id,\n      'aria-labelledby': dom(api.buttonRef)?.id,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      role: 'menu',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'MenuItems',\n    })\n  },\n  setup() {\n    let api = useMenuContext('MenuItems')\n    let id = `headlessui-menu-items-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    useTreeWalker({\n      container: computed(() => dom(api.itemsRef)),\n      enabled: computed(() => api.menuState.value === MenuStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeItemIndex.value !== null) {\n            let { id } = api.items.value[api.activeItemIndex.value]\n            document.getElementById(id)?.click()\n          }\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.menuState.value === MenuStates.Open\n    })\n\n    return { id, el: api.itemsRef, handleKeyDown, handleKeyUp, visible }\n  },\n})\n\nexport let MenuItem = defineComponent({\n  name: 'MenuItem',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useMenuContext('MenuItem')\n    let id = `headlessui-menu-item-${useId()}`\n\n    let active = computed(() => {\n      return api.activeItemIndex.value !== null\n        ? api.items.value[api.activeItemIndex.value].id === id\n        : false\n    })\n\n    let dataRef = ref<MenuItemDataRef['value']>({ disabled: props.disabled, textValue: '' })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerItem(id, dataRef))\n    onUnmounted(() => api.unregisterItem(id))\n\n    watchEffect(() => {\n      if (api.menuState.value !== MenuStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.closeMenu()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToItem(Focus.Nothing)\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToItem(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'menuitem',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuItem',\n      })\n    }\n  },\n})\n","import { watchEffect, ComputedRef } from 'vue'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n","import {\n  defineComponent,\n  inject,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  popoverState: Ref<PopoverStates>\n  button: Ref<HTMLElement | null>\n  buttonId: string\n  panel: Ref<HTMLElement | null>\n  panelId: string\n\n  // State mutators\n  togglePopover(): void\n  closePopover(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet PopoverContext = Symbol('PopoverContext') as InjectionKey<StateDefinition>\nfunction usePopoverContext(component: string) {\n  let context = inject(PopoverContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = Symbol('PopoverGroupContext') as InjectionKey<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>\n\nfunction usePopoverGroupContext() {\n  return inject(PopoverGroupContext, null)\n}\n\nlet PopoverPanelContext = Symbol('PopoverPanelContext') as InjectionKey<string | null>\nfunction usePopoverPanelContext() {\n  return inject(PopoverPanelContext, null)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\n\n// ---\n\nexport let Popover = defineComponent({\n  name: 'Popover',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-popover-button-${useId()}`\n    let panelId = `headlessui-popover-panel-${useId()}`\n\n    let popoverState = ref<StateDefinition['popoverState']['value']>(PopoverStates.Closed)\n    let button = ref<StateDefinition['button']['value']>(null)\n    let panel = ref<StateDefinition['panel']['value']>(null)\n\n    let api = {\n      popoverState,\n      buttonId,\n      panelId,\n      panel,\n      button,\n      togglePopover() {\n        popoverState.value = match(popoverState.value, {\n          [PopoverStates.Open]: PopoverStates.Closed,\n          [PopoverStates.Closed]: PopoverStates.Open,\n        })\n      },\n      closePopover() {\n        if (popoverState.value === PopoverStates.Closed) return\n        popoverState.value = PopoverStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closePopover()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(PopoverContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(popoverState.value, {\n          [PopoverStates.Open]: State.Open,\n          [PopoverStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let registerBag = {\n      buttonId,\n      panelId,\n      close() {\n        api.closePopover()\n      },\n    }\n\n    let groupContext = usePopoverGroupContext()\n    let registerPopover = groupContext?.registerPopover\n\n    function isFocusWithinPopoverGroup() {\n      return (\n        groupContext?.isFocusWithinPopoverGroup() ??\n        (dom(button)?.contains(document.activeElement) ||\n          dom(panel)?.contains(document.activeElement))\n      )\n    }\n\n    watchEffect(() => registerPopover?.(registerBag))\n\n    // Handle focus out\n    useWindowEvent(\n      'focus',\n      () => {\n        if (popoverState.value !== PopoverStates.Open) return\n        if (isFocusWithinPopoverGroup()) return\n        if (!button) return\n        if (!panel) return\n\n        api.closePopover()\n      },\n      true\n    )\n\n    // Handle outside click\n    useWindowEvent('mousedown', (event: MouseEvent) => {\n      let target = event.target as HTMLElement\n\n      if (popoverState.value !== PopoverStates.Open) return\n\n      if (dom(button)?.contains(target)) return\n      if (dom(panel)?.contains(target)) return\n\n      api.closePopover()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(button)?.focus()\n      }\n    })\n\n    return () => {\n      let slot = { open: popoverState.value === PopoverStates.Open, close: api.close }\n      return render({ props, slot, slots, attrs, name: 'Popover' })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverButton = defineComponent({\n  name: 'PopoverButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverButton')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          ref: 'el',\n          type: this.type,\n          onKeydown: this.handleKeyDown,\n          onClick: this.handleClick,\n        }\n      : {\n          ref: 'el',\n          id: api.buttonId,\n          type: this.type,\n          'aria-expanded': this.$props.disabled\n            ? undefined\n            : api.popoverState.value === PopoverStates.Open,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          disabled: this.$props.disabled ? true : undefined,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n          onClick: this.handleClick,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = usePopoverContext('PopoverButton')\n\n    let groupContext = usePopoverGroupContext()\n    let closeOthers = groupContext?.closeOthers\n\n    let panelContext = usePopoverPanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n    let activeElementRef = ref<Element | null>(null)\n    let previousActiveElementRef = ref<Element | null>(\n      typeof window === 'undefined' ? null : document.activeElement\n    )\n\n    useWindowEvent(\n      'focus',\n      () => {\n        previousActiveElementRef.value = activeElementRef.value\n        activeElementRef.value = document.activeElement\n      },\n      true\n    )\n\n    let elementRef = ref(null)\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    return {\n      isWithinPanel,\n      el: elementRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        elementRef\n      ),\n      handleKeyDown(event: KeyboardEvent) {\n        if (isWithinPanel) {\n          if (api.popoverState.value === PopoverStates.Closed) return\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              api.closePopover()\n              dom(api.button)?.focus() // Re-focus the original opening Button\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n              api.togglePopover()\n              break\n\n            case Keys.Escape:\n              if (api.popoverState.value !== PopoverStates.Open) return closeOthers?.(api.buttonId)\n              if (!dom(api.button)) return\n              if (!dom(api.button)?.contains(document.activeElement)) return\n              event.preventDefault()\n              event.stopPropagation()\n              api.closePopover()\n              break\n\n            case Keys.Tab:\n              if (api.popoverState.value !== PopoverStates.Open) return\n              if (!api.panel) return\n              if (!api.button) return\n\n              // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n              if (event.shiftKey) {\n                // Check if the last focused element exists, and check that it is not inside button or panel itself\n                if (!previousActiveElementRef.value) return\n                if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n                if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n                // Check if the last focused element is *after* the button in the DOM\n                let focusableElements = getFocusableElements()\n                let previousIdx = focusableElements.indexOf(\n                  previousActiveElementRef.value as HTMLElement\n                )\n                let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n                if (buttonIdx > previousIdx) return\n\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.Last)\n              } else {\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.First)\n              }\n\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (isWithinPanel) return\n        if (event.key === Keys.Space) {\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n        }\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!api.panel) return\n        if (!api.button) return\n\n        // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n        switch (event.key) {\n          case Keys.Tab:\n            // Check if the last focused element exists, and check that it is not inside button or panel itself\n            if (!previousActiveElementRef.value) return\n            if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n            if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n            // Check if the last focused element is *after* the button in the DOM\n            let focusableElements = getFocusableElements()\n            let previousIdx = focusableElements.indexOf(\n              previousActiveElementRef.value as HTMLElement\n            )\n            let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n            if (buttonIdx > previousIdx) return\n\n            event.preventDefault()\n            event.stopPropagation()\n            focusIn(dom(api.panel)!, Focus.Last)\n            break\n        }\n      },\n      handleClick() {\n        if (props.disabled) return\n        if (isWithinPanel) {\n          api.closePopover()\n          dom(api.button)?.focus() // Re-focus the original opening Button\n        } else {\n          if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n          dom(api.button)?.focus()\n          api.togglePopover()\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let PopoverOverlay = defineComponent({\n  name: 'PopoverOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverOverlay',\n    })\n  },\n  setup() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: `headlessui-popover-overlay-${useId()}`,\n      handleClick() {\n        api.closePopover()\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverPanel = defineComponent({\n  name: 'PopoverPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    focus: { type: Boolean, default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverPanel')\n\n    let slot = {\n      open: api.popoverState.value === PopoverStates.Open,\n      close: api.close,\n    }\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverPanel',\n    })\n  },\n  setup(props) {\n    let { focus } = props\n    let api = usePopoverContext('PopoverPanel')\n\n    provide(PopoverPanelContext, api.panelId)\n\n    onUnmounted(() => {\n      api.panel.value = null\n    })\n\n    // Move focus within panel\n    watchEffect(() => {\n      if (!focus) return\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n\n      let activeElement = document.activeElement as HTMLElement\n      if (dom(api.panel)?.contains(activeElement)) return // Already focused within Dialog\n\n      focusIn(dom(api.panel)!, Focus.First)\n    })\n\n    // Handle Tab / Shift+Tab focus positioning\n    useWindowEvent('keydown', (event: KeyboardEvent) => {\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!dom(api.panel)) return\n\n      if (event.key !== Keys.Tab) return\n      if (!document.activeElement) return\n      if (!dom(api.panel)?.contains(document.activeElement)) return\n\n      // We will take-over the default tab behaviour so that we have a bit\n      // control over what is focused next. It will behave exactly the same,\n      // but it will also \"fix\" some issues based on whether you are using a\n      // Portal or not.\n      event.preventDefault()\n\n      let result = focusIn(dom(api.panel)!, event.shiftKey ? Focus.Previous : Focus.Next)\n\n      if (result === FocusResult.Underflow) {\n        return dom(api.button)?.focus()\n      } else if (result === FocusResult.Overflow) {\n        if (!dom(api.button)) return\n\n        let elements = getFocusableElements()\n        let buttonIdx = elements.indexOf(dom(api.button)!)\n\n        let nextElements = elements\n          .splice(buttonIdx + 1) // Elements after button\n          .filter(element => !dom(api.panel)?.contains(element)) // Ignore items in panel\n\n        // Try to focus the next element, however it could fail if we are in a\n        // Portal that happens to be the very last one in the DOM. In that\n        // case we would Error (because nothing after the button is\n        // focusable). Therefore we will try and focus the very first item in\n        // the document.body.\n        if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n          focusIn(document.body, Focus.First)\n        }\n      }\n    })\n\n    // Handle focus out when we are in special \"focus\" mode\n    useWindowEvent(\n      'focus',\n      () => {\n        if (!focus) return\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!dom(api.panel)) return\n        if (dom(api.panel)?.contains(document.activeElement as HTMLElement)) return\n        api.closePopover()\n      },\n      true\n    )\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      handleKeyDown(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Escape:\n            if (api.popoverState.value !== PopoverStates.Open) return\n            if (!dom(api.panel)) return\n            if (!dom(api.panel)?.contains(document.activeElement)) return\n            event.preventDefault()\n            event.stopPropagation()\n            api.closePopover()\n            dom(api.button)?.focus()\n            break\n        }\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverGroup = defineComponent({\n  name: 'PopoverGroup',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let propsWeControl = { ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverGroup',\n    })\n  },\n  setup() {\n    let groupRef = ref<HTMLElement | null>(null)\n    let popovers = ref<PopoverRegisterBag[]>([])\n\n    function unregisterPopover(registerBag: PopoverRegisterBag) {\n      let idx = popovers.value.indexOf(registerBag)\n      if (idx !== -1) popovers.value.splice(idx, 1)\n    }\n\n    function registerPopover(registerBag: PopoverRegisterBag) {\n      popovers.value.push(registerBag)\n      return () => {\n        unregisterPopover(registerBag)\n      }\n    }\n\n    function isFocusWithinPopoverGroup() {\n      let element = document.activeElement as HTMLElement\n\n      if (dom(groupRef)?.contains(element)) return true\n\n      // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n      return popovers.value.some(bag => {\n        return (\n          document.getElementById(bag.buttonId)?.contains(element) ||\n          document.getElementById(bag.panelId)?.contains(element)\n        )\n      })\n    }\n\n    function closeOthers(buttonId: string) {\n      for (let popover of popovers.value) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    }\n\n    provide(PopoverGroupContext, {\n      registerPopover,\n      unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    })\n\n    return { el: groupRef }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet LabelContext = Symbol('LabelContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, unknown>\n  name: string\n  props: Record<string, unknown>\n}>\n\nfunction useLabelContext() {\n  let context = inject(LabelContext, null)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\nexport function useLabels({\n  slot = {},\n  name = 'Label',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let labelIds = ref<string[]>([])\n  function register(value: string) {\n    labelIds.value.push(value)\n\n    return () => {\n      let idx = labelIds.value.indexOf(value)\n      if (idx === -1) return\n      labelIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(LabelContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() => (labelIds.value.length > 0 ? labelIds.value.join(' ') : undefined))\n}\n\n// ---\n\nexport let Label = defineComponent({\n  name: 'Label',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    passive: { type: [Boolean], default: false },\n  },\n  render() {\n    let { name = 'Label', slot = {}, props = {} } = this.context\n    let { passive, ...passThroughProps } = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n    let allProps = { ...passThroughProps, ...propsWeControl }\n\n    // @ts-expect-error props are dynamic via context, some components will\n    //                  provide an onClick then we can delete it.\n    if (passive) delete allProps['onClick']\n\n    return render({\n      props: allProps,\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useLabelContext()\n    let id = `headlessui-label-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n\n  // Types\n  InjectionKey,\n  Ref,\n  UnwrapRef,\n} from 'vue'\nimport { dom } from '../../utils/dom'\nimport { Keys } from '../../keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: Ref<HTMLElement | null>\n  propsRef: Ref<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  // State\n  options: Ref<Option[]>\n  value: Ref<unknown>\n  disabled: Ref<boolean>\n  firstOption: Ref<Option | undefined>\n  containsCheckedOption: Ref<boolean>\n\n  // State mutators\n  change(nextValue: unknown): boolean\n  registerOption(action: Option): void\n  unregisterOption(id: Option['id']): void\n}\n\nlet RadioGroupContext = Symbol('RadioGroupContext') as InjectionKey<StateDefinition>\n\nfunction useRadioGroupContext(component: string) {\n  let context = inject(RadioGroupContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let RadioGroup = defineComponent({\n  name: 'RadioGroup',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  render() {\n    let { modelValue, disabled, ...passThroughProps } = this.$props\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'radiogroup',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroup',\n    })\n  },\n  setup(props, { emit }) {\n    let radioGroupRef = ref<HTMLElement | null>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      options,\n      value,\n      disabled: computed(() => props.disabled),\n      firstOption: computed(() =>\n        options.value.find(option => {\n          if (option.propsRef.disabled) return false\n          return true\n        })\n      ),\n      containsCheckedOption: computed(() =>\n        options.value.some(option => toRaw(option.propsRef.value) === toRaw(props.modelValue))\n      ),\n      change(nextValue: unknown) {\n        if (props.disabled) return false\n        if (value.value === nextValue) return false\n        let nextOption = options.value.find(\n          option => toRaw(option.propsRef.value) === toRaw(nextValue)\n        )?.propsRef\n        if (nextOption?.disabled) return false\n        emit('update:modelValue', nextValue)\n        return true\n      },\n      registerOption(action: UnwrapRef<Option>) {\n        let orderMap = Array.from(\n          radioGroupRef.value?.querySelectorAll('[id^=\"headlessui-radiogroup-option-\"]')!\n        ).reduce(\n          (lookup, element, index) => Object.assign(lookup, { [element.id]: index }),\n          {}\n        ) as Record<string, number>\n\n        options.value.push(action)\n        options.value.sort((a, z) => orderMap[a.id] - orderMap[z.id])\n      },\n      unregisterOption(id: Option['id']) {\n        let idx = options.value.findIndex(radio => radio.id === id)\n        if (idx === -1) return\n        options.value.splice(idx, 1)\n      },\n    }\n\n    // @ts-expect-error ...\n    provide(RadioGroupContext, api)\n\n    useTreeWalker({\n      container: computed(() => dom(radioGroupRef)),\n      accept(node) {\n        if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (!radioGroupRef.value) return\n      if (!radioGroupRef.value.contains(event.target as HTMLElement)) return\n\n      let all = options.value\n        .filter(option => option.propsRef.disabled === false)\n        .map(radio => radio.element) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.value.find(\n              option => option.element === document.activeElement\n            )\n            if (activeOption) api.change(activeOption.propsRef.value)\n          }\n          break\n      }\n    }\n\n    let id = `headlessui-radiogroup-${useId()}`\n\n    return {\n      id,\n      labelledby,\n      describedby,\n      el: radioGroupRef,\n      handleKeyDown,\n    }\n  },\n})\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nexport let RadioGroupOption = defineComponent({\n  name: 'RadioGroupOption',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  render() {\n    let { value, disabled, ...passThroughProps } = this.$props\n\n    let slot = {\n      checked: this.checked,\n      disabled: this.disabled,\n      active: Boolean(this.state & OptionState.Active),\n    }\n\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'radio',\n      'aria-checked': this.checked ? 'true' : 'false',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      'aria-disabled': this.disabled ? true : undefined,\n      tabIndex: this.tabIndex,\n      onClick: this.disabled ? undefined : this.handleClick,\n      onFocus: this.disabled ? undefined : this.handleFocus,\n      onBlur: this.disabled ? undefined : this.handleBlur,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroupOption',\n    })\n  },\n  setup(props) {\n    let api = useRadioGroupContext('RadioGroupOption')\n    let id = `headlessui-radiogroup-option-${useId()}`\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let optionRef = ref<HTMLElement | null>(null)\n    let propsRef = computed(() => ({ value: props.value, disabled: props.disabled }))\n    let state = ref(OptionState.Empty)\n\n    onMounted(() => api.registerOption({ id, element: optionRef, propsRef }))\n    onUnmounted(() => api.unregisterOption(id))\n\n    let isFirstOption = computed(() => api.firstOption.value?.id === id)\n    let disabled = computed(() => api.disabled.value || props.disabled)\n    let checked = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    return {\n      id,\n      el: optionRef,\n      labelledby,\n      describedby,\n      state,\n      disabled,\n      checked,\n      tabIndex: computed(() => {\n        if (disabled.value) return -1\n        if (checked.value) return 0\n        if (!api.containsCheckedOption.value && isFirstOption.value) return 0\n        return -1\n      }),\n      handleClick() {\n        if (!api.change(props.value)) return\n\n        state.value |= OptionState.Active\n        optionRef.value?.focus()\n      },\n      handleFocus() {\n        state.value |= OptionState.Active\n      },\n      handleBlur() {\n        state.value &= ~OptionState.Active\n      },\n    }\n  },\n})\n\n// ---\n\nexport let RadioGroupLabel = Label\nexport let RadioGroupDescription = Description\n","import {\n  defineComponent,\n  inject,\n  provide,\n  ref,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () => render({ props, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: { 'update:modelValue': (_value: boolean) => true },\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: Boolean, default: false },\n  },\n  render() {\n    let slot = { checked: this.$props.modelValue }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'switch',\n      type: this.type,\n      tabIndex: 0,\n      'aria-checked': this.$props.modelValue,\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n      onKeyup: this.handleKeyUp,\n      onKeypress: this.handleKeyPress,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Switch',\n    })\n  },\n  setup(props, { emit, attrs }) {\n    let api = inject(GroupContext, null)\n    let id = `headlessui-switch-${useId()}`\n\n    function toggle() {\n      emit('update:modelValue', !props.modelValue)\n    }\n\n    let internalSwitchRef = ref(null)\n    let switchRef = api === null ? internalSwitchRef : api.switchRef\n\n    return {\n      id,\n      el: switchRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        switchRef\n      ),\n      labelledby: api?.labelledby,\n      describedby: api?.describedby,\n      handleClick(event: MouseEvent) {\n        event.preventDefault()\n        toggle()\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (event.key !== Keys.Tab) event.preventDefault()\n        if (event.key === Keys.Space) toggle()\n      },\n      // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n      handleKeyPress(event: KeyboardEvent) {\n        event.preventDefault()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { dom } from '../../utils/dom'\nimport { match } from '../../utils/match'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ntype StateDefinition = {\n  // State\n  selectedIndex: Ref<number | null>\n  orientation: Ref<'vertical' | 'horizontal'>\n  activation: Ref<'auto' | 'manual'>\n\n  tabs: Ref<Ref<HTMLElement | null>[]>\n  panels: Ref<Ref<HTMLElement | null>[]>\n\n  // State mutators\n  setSelectedIndex(index: number): void\n  registerTab(tab: Ref<HTMLElement | null>): void\n  unregisterTab(tab: Ref<HTMLElement | null>): void\n  registerPanel(panel: Ref<HTMLElement | null>): void\n  unregisterPanel(panel: Ref<HTMLElement | null>): void\n}\n\nlet TabsContext = Symbol('TabsContext') as InjectionKey<StateDefinition>\n\nfunction useTabsContext(component: string) {\n  let context = inject(TabsContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <TabGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let TabGroup = defineComponent({\n  name: 'TabGroup',\n  emits: {\n    change: (_index: number) => true,\n  },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultIndex: { type: [Number], default: 0 },\n    vertical: { type: [Boolean], default: false },\n    manual: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let selectedIndex = ref<StateDefinition['selectedIndex']['value']>(null)\n    let tabs = ref<StateDefinition['tabs']['value']>([])\n    let panels = ref<StateDefinition['panels']['value']>([])\n\n    let api = {\n      selectedIndex,\n      orientation: computed(() => (props.vertical ? 'vertical' : 'horizontal')),\n      activation: computed(() => (props.manual ? 'manual' : 'auto')),\n      tabs,\n      panels,\n      setSelectedIndex(index: number) {\n        if (selectedIndex.value === index) return\n        selectedIndex.value = index\n        emit('change', index)\n      },\n      registerTab(tab: typeof tabs['value'][number]) {\n        if (!tabs.value.includes(tab)) tabs.value.push(tab)\n      },\n      unregisterTab(tab: typeof tabs['value'][number]) {\n        let idx = tabs.value.indexOf(tab)\n        if (idx !== -1) tabs.value.slice(idx, 1)\n      },\n      registerPanel(panel: typeof panels['value'][number]) {\n        if (!panels.value.includes(panel)) panels.value.push(panel)\n      },\n      unregisterPanel(panel: typeof panels['value'][number]) {\n        let idx = panels.value.indexOf(panel)\n        if (idx !== -1) panels.value.slice(idx, 1)\n      },\n    }\n\n    provide(TabsContext, api)\n\n    onMounted(() => {\n      if (api.tabs.value.length <= 0) return console.log('bail')\n      if (selectedIndex.value !== null) return console.log('bail 2')\n\n      let tabs = api.tabs.value.map(tab => dom(tab)).filter(Boolean) as HTMLElement[]\n      let focusableTabs = tabs.filter(tab => !tab.hasAttribute('disabled'))\n\n      // Underflow\n      if (props.defaultIndex < 0) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[0])\n      }\n\n      // Overflow\n      else if (props.defaultIndex > api.tabs.value.length) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[focusableTabs.length - 1])\n      }\n\n      // Middle\n      else {\n        let before = tabs.slice(0, props.defaultIndex)\n        let after = tabs.slice(props.defaultIndex)\n\n        let next = [...after, ...before].find(tab => focusableTabs.includes(tab))\n        if (!next) return\n\n        selectedIndex.value = tabs.indexOf(next)\n      }\n    })\n\n    return () => {\n      let slot = { selectedIndex: selectedIndex.value }\n\n      return render({\n        props: omit(props, ['defaultIndex', 'manual', 'vertical']),\n        slot,\n        slots,\n        attrs,\n        name: 'TabGroup',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let TabList = defineComponent({\n  name: 'TabList',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useTabsContext('TabList')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      let propsWeControl = {\n        role: 'tablist',\n        'aria-orientation': api.orientation.value,\n      }\n      let passThroughProps = props\n\n      return render({\n        props: { ...passThroughProps, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'TabList',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let Tab = defineComponent({\n  name: 'Tab',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useTabsContext('Tab')\n\n    let slot = { selected: this.selected }\n    let propsWeControl = {\n      ref: 'el',\n      onKeydown: this.handleKeyDown,\n      onFocus: api.activation.value === 'manual' ? this.handleFocus : this.handleSelection,\n      onClick: this.handleSelection,\n      id: this.id,\n      role: 'tab',\n      type: this.type,\n      'aria-controls': api.panels.value[this.myIndex]?.value?.id,\n      'aria-selected': this.selected,\n      tabIndex: this.selected ? 0 : -1,\n      disabled: this.$props.disabled ? true : undefined,\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n      Object.assign(propsWeControl, { ['data-headlessui-index']: this.myIndex })\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Tab',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useTabsContext('Tab')\n    let id = `headlessui-tabs-tab-${useId()}`\n\n    let tabRef = ref()\n\n    onMounted(() => api.registerTab(tabRef))\n    onUnmounted(() => api.unregisterTab(tabRef))\n\n    let myIndex = computed(() => api.tabs.value.indexOf(tabRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let list = api.tabs.value.map(tab => dom(tab)).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        api.setSelectedIndex(myIndex.value)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(api.orientation.value, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    }\n\n    function handleFocus() {\n      dom(tabRef)?.focus()\n    }\n\n    function handleSelection() {\n      if (props.disabled) return\n\n      dom(tabRef)?.focus()\n      api.setSelectedIndex(myIndex.value)\n    }\n\n    return {\n      el: tabRef,\n      id,\n      selected,\n      myIndex,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        tabRef\n      ),\n      handleKeyDown,\n      handleFocus,\n      handleSelection,\n    }\n  },\n})\n\n// ---\n\nexport let TabPanels = defineComponent({\n  name: 'TabPanels',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useTabsContext('TabPanels')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      return render({\n        props,\n        slot,\n        attrs,\n        slots,\n        name: 'TabPanels',\n      })\n    }\n  },\n})\n\nexport let TabPanel = defineComponent({\n  name: 'TabPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useTabsContext('TabPanel')\n\n    let slot = { selected: this.selected }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'tabpanel',\n      'aria-labelledby': api.tabs.value[this.myIndex]?.value?.id,\n      tabIndex: this.selected ? 0 : -1,\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n      Object.assign(propsWeControl, { ['data-headlessui-index']: this.myIndex })\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.Static | Features.RenderStrategy,\n      visible: this.selected,\n      name: 'TabPanel',\n    })\n  },\n  setup() {\n    let api = useTabsContext('TabPanel')\n    let id = `headlessui-tabs-panel-${useId()}`\n\n    let panelRef = ref()\n\n    onMounted(() => api.registerPanel(panelRef))\n    onUnmounted(() => api.unregisterPanel(panelRef))\n\n    let myIndex = computed(() => api.panels.value.indexOf(panelRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    return { id, el: panelRef, selected, myIndex }\n  },\n})\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\n\nimport { Features, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\nimport {\n  useOpenClosedProvider,\n  State,\n  useOpenClosed,\n  hasOpenClosed,\n} from '../../internal/open-closed'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter(className => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction hasTransitionContext() {\n  return inject(TransitionContext, null) !== null\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    if (this.renderAsRoot) {\n      return h(\n        TransitionRoot,\n        {\n          ...this.$props,\n          onBeforeEnter: () => this.$emit('beforeEnter'),\n          onAfterEnter: () => this.$emit('afterEnter'),\n          onBeforeLeave: () => this.$emit('beforeLeave'),\n          onAfterLeave: () => this.$emit('afterLeave'),\n        },\n        this.$slots\n      )\n    }\n\n    let {\n      appear,\n      show,\n\n      // Class names\n      enter,\n      enterFrom,\n      enterTo,\n      entered,\n      leave,\n      leaveFrom,\n      leaveTo,\n      ...rest\n    } = this.$props\n\n    let propsWeControl = { ref: 'el' }\n    let passthroughProps = rest\n\n    return render({\n      props: { ...passthroughProps, ...propsWeControl },\n      slot: {},\n      slots: this.$slots,\n      attrs: this.$attrs,\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'TransitionChild',\n    })\n  },\n  setup(props, { emit }) {\n    if (!hasTransitionContext() && hasOpenClosed()) {\n      return {\n        renderAsRoot: true,\n      }\n    }\n\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let enteredClasses = splitClasses(props.entered)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(\n              node,\n              enterClasses,\n              enterFromClasses,\n              enterToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n                if (reason === Reason.Finished) emit('afterEnter')\n              }\n            )\n          : transition(\n              node,\n              leaveClasses,\n              leaveFromClasses,\n              leaveToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n\n                if (reason !== Reason.Finished) return\n\n                // When we don't have children anymore we can safely unregister from the parent and hide\n                // ourselves.\n                if (!hasChildren(nesting)) {\n                  state.value = TreeStates.Hidden\n                  unregister(id)\n                  emit('afterLeave')\n                }\n              }\n            )\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show, appear],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n\n    provide(NestingContext, nesting)\n    useOpenClosedProvider(\n      computed(() =>\n        match(state.value, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })\n      )\n    )\n\n    return { el: container, renderAsRoot: false, state }\n  },\n})\n\n// ---\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    let { show, appear, unmount, ...passThroughProps } = this.$props\n    let sharedProps = { unmount }\n\n    return render({\n      props: {\n        ...sharedProps,\n        as: 'template',\n      },\n      slot: {},\n      slots: {\n        ...this.$slots,\n        default: () => [\n          h(\n            TransitionChild,\n            {\n              onBeforeEnter: () => this.$emit('beforeEnter'),\n              onAfterEnter: () => this.$emit('afterEnter'),\n              onBeforeLeave: () => this.$emit('beforeLeave'),\n              onAfterLeave: () => this.$emit('afterLeave'),\n              ...this.$attrs,\n              ...sharedProps,\n              ...passThroughProps,\n            },\n            this.$slots.default\n          ),\n        ],\n      },\n      attrs: {},\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'Transition',\n    })\n  },\n  setup(props) {\n    let usesOpenClosedState = useOpenClosed()\n\n    let show = computed(() => {\n      if (props.show === null && usesOpenClosedState !== null) {\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n\n      return props.show\n    })\n\n    watchEffect(() => {\n      if (![true, false].includes(show.value)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(show.value ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = { value: true }\n    let transitionBag = {\n      show,\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (show.value) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return { state, show }\n  },\n})\n"],"names":["match","value","lookup","returnValue","args","error","Error","Object","keys","map","key","join","captureStackTrace","Features","RenderStrategy","Keys","render","visible","features","None","main","Static","props","_render","unmount","Unmount","Hidden","hidden","style","display","input","attrs","slots","slot","name","omit","as","passThroughProps","children","length","firstChild","other","type","concat","line","cloneVNode","Array","isArray","h","object","keysToOmit","clone","assign","id","useId","Focus","FocusResult","Direction","FocusableMode","focusableSelector","selector","getFocusableElements","container","document","body","from","querySelectorAll","focusElement","element","focus","preventScroll","focusIn","elements","active","activeElement","direction","First","Next","Previous","Last","startIndex","Math","max","indexOf","focusOptions","NoScroll","offset","total","next","undefined","nextIdx","WrapAround","Underflow","Overflow","hasAttribute","setAttribute","Success","useWindowEvent","listener","options","window","watchEffect","onInvalidate","addEventListener","removeEventListener","contains","containers","useFocusTrap","enabled","ref","restoreElement","previousActiveElement","handleFocus","size","initialFocus","couldFocus","console","warn","restore","onUpdated","onUnmounted","event","Tab","preventDefault","shiftKey","previous","toElement","target","HTMLElement","stopPropagation","interactables","Set","originals","Map","inert","original","get","removeAttribute","StackMessage","StackContext","Symbol","useStackContext","inject","useStackProvider","onUpdate","parentUpdate","provide","ForcePortalRootContext","ForcePortalRoot","defineComponent","String","force","Boolean","setup","Portal","forcePortalRoot","groupContext","PortalGroupContext","myTarget","existingRoot","getElementById","root","createElement","appendChild","getPortalRoot","resolveTarget","notify","domElement","AddElement","RemoveElement","useElemenStack","parentElement","removeChild","Teleport","to","PortalGroup","api","reactive","DescriptionContext","useDescriptions","descriptionIds","register","push","idx","splice","computed","Description","this","context","$props","propsWeControl","entries","reduce","acc","unref","$attrs","$slots","useDescriptionContext","onMounted","dom","$el","State","DialogStates","Context","useOpenClosed","useOpenClosedProvider","DialogContext","useDialogContext","component","err","DisclosureStates","Missing","Dialog","inheritAttrs","open","emits","close","_close","role","dialogState","Open","titleId","describedby","onClick","handleClick","_","_this","dialogRef","emit","usesOpenClosedState","Closed","internalDialogRef","focusTrapOptions","add","forEach","child","set","getAttribute","has","useInertOthers","message","setTitleId","nextTick","Escape","overflow","documentElement","paddingRight","scrollbarWidth","innerWidth","clientWidth","observer","IntersectionObserver","entry","boundingClientRect","x","y","width","height","observe","disconnect","el","DialogOverlay","currentTarget","DialogTitle","DialogDescription","resolveType","tag","toLowerCase","useResolveButtonType","data","refElement","HTMLButtonElement","_dom","DisclosureContext","useDisclosureContext","ListboxStates","DisclosurePanelContext","Disclosure","defaultOpen","buttonId","panelId","disclosureState","panelRef","buttonRef","panel","button","toggleDisclosure","closeDisclosure","focusableElement","DisclosureButton","disabled","isWithinPanel","onKeydown","handleKeyDown","onKeyup","handleKeyUp","panelContext","elementRef","Space","Enter","DisclosurePanel","FocusTrap","calculateActiveIndex","action","resolvers","items","resolveItems","currentActiveIndex","resolveActiveIndex","activeIndex","nextActiveIndex","findIndex","item","resolveDisabled","slice","reverse","all","Specific","resolveId","Nothing","assertNever","ListboxContext","useListboxContext","MenuStates","Listbox","_value","horizontal","modelValue","Number","listboxState","labelRef","optionsRef","searchQuery","activeOptionIndex","orientation","closeListbox","openListbox","goToOption","nextActiveOptionIndex","option","dataRef","search","textValue","startsWith","clearSearch","registerOption","unregisterOption","nextOptions","currentActiveOption","a","select","_dom2","defaultPrevented","ListboxLabel","ListboxButton","_dom5","_dom6","ArrowDown","ArrowUp","cb","_dom9","_dom10","requestAnimationFrame","ListboxOptions","_api$options$value$ap","_dom11","_dom12","tabIndex","searchDebounce","clearTimeout","_dom13","vertical","ArrowRight","ArrowLeft","Home","PageUp","End","PageDown","_dom14","setTimeout","ListboxOption","selected","toRaw","_dom15","handleMove","handleLeave","_document$getElementB","textContent","_document$getElementB2","trim","watch","immediate","_document$getElementB4","scrollIntoView","block","onFocus","onPointermove","onMousemove","onPointerleave","onMouseleave","useTreeWalker","accept","walk","acceptNode","node","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","MenuContext","useMenuContext","PopoverStates","Menu","menuState","itemsRef","activeItemIndex","closeMenu","openMenu","goToItem","nextActiveItemIndex","registerItem","unregisterItem","nextItems","currentActiveItem","MenuButton","_dom4","_dom7","_dom8","MenuItems","_api$items$value$api$","FILTER_REJECT","FILTER_SKIP","FILTER_ACCEPT","click","MenuItem","_document$getElementB3","PopoverContext","usePopoverContext","Popover","PopoverGroupContext","usePopoverGroupContext","PopoverPanelContext","popoverState","togglePopover","closePopover","registerBag","registerPopover","isFocusWithinPopoverGroup","mode","_dom3","Loose","Strict","matches","PopoverButton","closeOthers","activeElementRef","previousActiveElementRef","focusableElements","previousIdx","PopoverOverlay","PopoverPanel","result","_dom16","buttonIdx","filter","_dom17","_dom18","_dom19","PopoverGroup","groupRef","popovers","unregisterPopover","_dom21","some","bag","popover","LabelContext","useLabelContext","useLabels","labelIds","Label","passive","allProps","RadioGroupContext","useRadioGroupContext","OptionState","RadioGroup","labelledby","radioGroupRef","firstOption","find","propsRef","containsCheckedOption","change","nextValue","nextOption","_options$value$find","orderMap","_radioGroupRef$value","index","sort","z","radio","activeOption","RadioGroupOption","checked","state","Active","onBlur","handleBlur","optionRef","Empty","isFirstOption","RadioGroupLabel","RadioGroupDescription","GroupContext","SwitchGroup","switchRef","Switch","onKeypress","handleKeyPress","toggle","internalSwitchRef","SwitchLabel","SwitchDescription","TabsContext","useTabsContext","Reason","TabGroup","_index","defaultIndex","manual","selectedIndex","tabs","panels","activation","setSelectedIndex","registerTab","tab","includes","unregisterTab","registerPanel","unregisterPanel","log","focusableTabs","before","after","TabList","handleSelection","myIndex","_api$panels$value$thi","_api$panels$value$thi2","tabRef","list","TabPanels","TabPanel","_api$tabs$value$this$","_api$tabs$value$this$2","disposables","raf","cancelAnimationFrame","nextFrame","timer","dispose","addClasses","classes","classList","removeClasses","remove","transition","base","entered","done","d","_done","called","getComputedStyle","transitionDuration","transitionDelay","split","v","parseFloat","durationMs","Finished","Cancelled","waitForTransition","reason","splitClasses","className","TreeStates","TransitionContext","NestingContext","hasChildren","Visible","useNesting","transitionableChildren","mounted","unregister","childId","strategy","TransitionChildRenderFeatures","TransitionChild","show","appear","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","beforeEnter","afterEnter","beforeLeave","afterLeave","renderAsRoot","TransitionRoot","onBeforeEnter","$emit","onAfterEnter","onBeforeLeave","onAfterLeave","useTransitionContext","useParentNesting","initial","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","Comment","_oldValues","_newValues","skip","executeTransition","sharedProps","_this2","nestingBag","transitionBag"],"mappings":"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"}