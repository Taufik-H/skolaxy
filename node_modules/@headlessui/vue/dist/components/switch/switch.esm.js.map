{"version":3,"file":"switch.esm.js","sources":["../../../src/components/switch/switch.ts"],"sourcesContent":["import {\n  defineComponent,\n  inject,\n  provide,\n  ref,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () => render({ props, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: { 'update:modelValue': (_value: boolean) => true },\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: Boolean, default: false },\n  },\n  render() {\n    let slot = { checked: this.$props.modelValue }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'switch',\n      type: this.type,\n      tabIndex: 0,\n      'aria-checked': this.$props.modelValue,\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n      onKeyup: this.handleKeyUp,\n      onKeypress: this.handleKeyPress,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Switch',\n    })\n  },\n  setup(props, { emit, attrs }) {\n    let api = inject(GroupContext, null)\n    let id = `headlessui-switch-${useId()}`\n\n    function toggle() {\n      emit('update:modelValue', !props.modelValue)\n    }\n\n    let internalSwitchRef = ref(null)\n    let switchRef = api === null ? internalSwitchRef : api.switchRef\n\n    return {\n      id,\n      el: switchRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        switchRef\n      ),\n      labelledby: api?.labelledby,\n      describedby: api?.describedby,\n      handleClick(event: MouseEvent) {\n        event.preventDefault()\n        toggle()\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (event.key !== Keys.Tab) event.preventDefault()\n        if (event.key === Keys.Space) toggle()\n      },\n      // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n      handleKeyPress(event: KeyboardEvent) {\n        event.preventDefault()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n"],"names":["GroupContext","Symbol","SwitchGroup","defineComponent","name","props","as","type","Object","String","setup","slots","attrs","switchRef","ref","labelledby","useLabels","onClick","value","click","focus","preventScroll","describedby","useDescriptions","api","provide","render","slot","Switch","emits","_value","modelValue","Boolean","checked","$props","propsWeControl","id","role","tabIndex","handleClick","onKeyup","handleKeyUp","onKeypress","handleKeyPress","$attrs","$slots","emit","inject","useId","toggle","internalSwitchRef","el","useResolveButtonType","computed","event","preventDefault","key","Keys","Tab","Space","SwitchLabel","Label","SwitchDescription","Description"],"mappings":"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"}