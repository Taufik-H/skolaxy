{"version":3,"file":"transition.esm.js","sources":["../../../src/components/transitions/transition.ts"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\n\nimport { Features, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\nimport {\n  useOpenClosedProvider,\n  State,\n  useOpenClosed,\n  hasOpenClosed,\n} from '../../internal/open-closed'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter(className => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction hasTransitionContext() {\n  return inject(TransitionContext, null) !== null\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    if (this.renderAsRoot) {\n      return h(\n        TransitionRoot,\n        {\n          ...this.$props,\n          onBeforeEnter: () => this.$emit('beforeEnter'),\n          onAfterEnter: () => this.$emit('afterEnter'),\n          onBeforeLeave: () => this.$emit('beforeLeave'),\n          onAfterLeave: () => this.$emit('afterLeave'),\n        },\n        this.$slots\n      )\n    }\n\n    let {\n      appear,\n      show,\n\n      // Class names\n      enter,\n      enterFrom,\n      enterTo,\n      entered,\n      leave,\n      leaveFrom,\n      leaveTo,\n      ...rest\n    } = this.$props\n\n    let propsWeControl = { ref: 'el' }\n    let passthroughProps = rest\n\n    return render({\n      props: { ...passthroughProps, ...propsWeControl },\n      slot: {},\n      slots: this.$slots,\n      attrs: this.$attrs,\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'TransitionChild',\n    })\n  },\n  setup(props, { emit }) {\n    if (!hasTransitionContext() && hasOpenClosed()) {\n      return {\n        renderAsRoot: true,\n      }\n    }\n\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let enteredClasses = splitClasses(props.entered)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(\n              node,\n              enterClasses,\n              enterFromClasses,\n              enterToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n                if (reason === Reason.Finished) emit('afterEnter')\n              }\n            )\n          : transition(\n              node,\n              leaveClasses,\n              leaveFromClasses,\n              leaveToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n\n                if (reason !== Reason.Finished) return\n\n                // When we don't have children anymore we can safely unregister from the parent and hide\n                // ourselves.\n                if (!hasChildren(nesting)) {\n                  state.value = TreeStates.Hidden\n                  unregister(id)\n                  emit('afterLeave')\n                }\n              }\n            )\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show, appear],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n\n    provide(NestingContext, nesting)\n    useOpenClosedProvider(\n      computed(() =>\n        match(state.value, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })\n      )\n    )\n\n    return { el: container, renderAsRoot: false, state }\n  },\n})\n\n// ---\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    let { show, appear, unmount, ...passThroughProps } = this.$props\n    let sharedProps = { unmount }\n\n    return render({\n      props: {\n        ...sharedProps,\n        as: 'template',\n      },\n      slot: {},\n      slots: {\n        ...this.$slots,\n        default: () => [\n          h(\n            TransitionChild,\n            {\n              onBeforeEnter: () => this.$emit('beforeEnter'),\n              onAfterEnter: () => this.$emit('afterEnter'),\n              onBeforeLeave: () => this.$emit('beforeLeave'),\n              onAfterLeave: () => this.$emit('afterLeave'),\n              ...this.$attrs,\n              ...sharedProps,\n              ...passThroughProps,\n            },\n            this.$slots.default\n          ),\n        ],\n      },\n      attrs: {},\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'Transition',\n    })\n  },\n  setup(props) {\n    let usesOpenClosedState = useOpenClosed()\n\n    let show = computed(() => {\n      if (props.show === null && usesOpenClosedState !== null) {\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n\n      return props.show\n    })\n\n    watchEffect(() => {\n      if (![true, false].includes(show.value)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(show.value ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = { value: true }\n    let transitionBag = {\n      show,\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (show.value) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return { state, show }\n  },\n})\n"],"names":["splitClasses","classes","split","filter","className","trim","length","TransitionContext","Symbol","TreeStates","hasTransitionContext","inject","useTransitionContext","context","Error","useParentNesting","NestingContext","hasChildren","bag","children","value","state","Visible","useNesting","done","transitionableChildren","ref","mounted","onMounted","onUnmounted","unregister","childId","strategy","RenderStrategy","Hidden","idx","findIndex","id","match","Unmount","splice","register","child","find","push","TransitionChildRenderFeatures","Features","TransitionChild","defineComponent","props","as","type","Object","String","show","Boolean","unmount","appear","enter","enterFrom","enterTo","entered","leave","leaveFrom","leaveTo","emits","beforeEnter","afterEnter","beforeLeave","afterLeave","render","renderAsRoot","h","TransitionRoot","$props","onBeforeEnter","$emit","onAfterEnter","onBeforeLeave","onAfterLeave","$slots","rest","propsWeControl","passthroughProps","slot","slots","attrs","$attrs","features","visible","name","setup","emit","hasOpenClosed","container","computed","initial","useId","isTransitioning","nesting","watchEffect","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","domElement","dom","isEmptyDOMNode","Comment","data","executeTransition","onInvalidate","skip","node","HTMLElement","transition","reason","Reason","Finished","watch","_oldValues","_newValues","immediate","provide","useOpenClosedProvider","State","Open","Closed","el","inheritAttrs","passThroughProps","sharedProps","usesOpenClosedState","useOpenClosed","includes","nestingBag","transitionBag"],"mappings":"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"}