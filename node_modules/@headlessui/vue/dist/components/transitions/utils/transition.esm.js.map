{"version":3,"file":"transition.esm.js","sources":["../../../../src/components/transitions/utils/transition.ts"],"sourcesContent":["import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n"],"names":["addClasses","node","classes","length","classList","add","removeClasses","remove","Reason","waitForTransition","done","d","disposables","dispose","getComputedStyle","transitionDuration","transitionDelay","map","value","split","filter","Boolean","v","includes","parseFloat","sort","a","z","resolvedValue","durationMs","delaysMs","setTimeout","Finished","Cancelled","transition","base","from","to","entered","_done","undefined","once","nextFrame","reason"],"mappings":"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"}