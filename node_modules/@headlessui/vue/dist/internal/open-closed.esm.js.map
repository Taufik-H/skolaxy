{"version":3,"file":"open-closed.esm.js","sources":["../../src/internal/open-closed.ts"],"sourcesContent":["import {\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nlet Context = Symbol('Context') as InjectionKey<Ref<State>>\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function hasOpenClosed() {\n  return useOpenClosed() !== null\n}\n\nexport function useOpenClosed() {\n  return inject(Context, null)\n}\n\nexport function useOpenClosedProvider(value: Ref<State>) {\n  provide(Context, value)\n}\n"],"names":["Context","Symbol","State","hasOpenClosed","useOpenClosed","inject","useOpenClosedProvider","value","provide"],"mappings":";;AASA,IAAIA,OAAO,gBAAGC,MAAM,CAAC,SAAD,CAApB;IAEYC;;AAAZ,WAAYA;AACVA,EAAAA,wBAAA,SAAA;AACAA,EAAAA,0BAAA,WAAA;AACD,CAHD,EAAYA,KAAK,KAALA,KAAK,KAAA,CAAjB;;SAKgBC;AACd,SAAOC,aAAa,OAAO,IAA3B;AACD;SAEeA;AACd,SAAOC,MAAM,CAACL,OAAD,EAAU,IAAV,CAAb;AACD;SAEeM,sBAAsBC;AACpCC,EAAAA,OAAO,CAACR,OAAD,EAAUO,KAAV,CAAP;AACD;;;;"}